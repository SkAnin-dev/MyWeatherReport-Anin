{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/index.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap for styling.\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\"; // React Query context provider.\nimport App from \"./App\";\n\n// Create a QueryClient instance for React Query.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\n\n// Get the root element from the HTML.\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","QueryClient","QueryClientProvider","App","jsxDEV","_jsxDEV","queryClient","root","createRoot","document","getElementById","render","StrictMode","children","client","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/index.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap for styling.\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\"; // React Query context provider.\nimport App from \"./App\";\n\n// Create a QueryClient instance for React Query.\nconst queryClient = new QueryClient();\n\n// Get the root element from the HTML.\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    {/* Provide the React Query context to the app */}\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAO,sCAAsC,CAAC,CAAC;AAC/C,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB,CAAC,CAAC;AAC1E,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIL,WAAW,CAAC,CAAC;;AAErC;AACA,MAAMM,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,cACTN,OAAA,CAACN,KAAK,CAACa,UAAU;EAAAC,QAAA,eAEfR,OAAA,CAACH,mBAAmB;IAACY,MAAM,EAAER,WAAY;IAAAO,QAAA,eACvCR,OAAA,CAACF,GAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}