{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AJAX, PROXY } from '../constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCityForm = ({\n  cities = [],\n  onCityAdded,\n  showNotification\n}) => {\n  _s();\n  const [cityName, setCityName] = useState('');\n\n  // Retrieve CSRF token from cookies.\n  const getCSRFToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));\n    return match ? match[2] : '';\n  };\n\n  // Validate city using the Django proxy endpoint.\n  const validateCity = name => {\n    const url = `${PROXY}weather/${encodeURIComponent(name)}/`;\n    return fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(\"City not found\");\n      }\n      return response.json();\n    }).then(data => {\n      if (data.currentConditions || data.days && data.days.length > 0) {\n        return true;\n      }\n      throw new Error(\"City not found\");\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const trimmedName = cityName.trim();\n    if (!trimmedName) return;\n\n    // Log current cities for debugging.\n    console.log(\"Existing cities:\", cities);\n\n    // Check for duplicate city.\n    if ((cities || []).some(city => city.name && city.name.toLowerCase() === trimmedName.toLowerCase())) {\n      showNotification({\n        type: 'danger',\n        message: `City '${trimmedName}' already exists in the list!`\n      });\n      return;\n    }\n\n    // First, validate the city via the proxy.\n    validateCity(trimmedName).then(() => {\n      const formData = new FormData(e.target);\n      fetch(`${AJAX}cities/add/`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'X-CSRFToken': getCSRFToken()\n        },\n        body: formData\n      }).then(res => res.json()).then(data => {\n        if (data.status === 'success') {\n          showNotification({\n            type: 'success',\n            message: 'City added successfully!'\n          });\n          onCityAdded(data.city);\n          setCityName('');\n        } else {\n          showNotification({\n            type: 'danger',\n            message: data.errors ? Object.values(data.errors).join(', ') : 'City already exists!'\n          });\n        }\n      }).catch(err => {\n        console.error('Error adding city:', err);\n        showNotification({\n          type: 'danger',\n          message: `Error adding city '${trimmedName}'`\n        });\n      });\n    }).catch(err => {\n      console.error(\"City validation failed:\", err);\n      showNotification({\n        type: 'danger',\n        message: `City '${trimmedName}' does not exist in the world!`\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"addCityForm\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field has-addons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control is-expanded\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"City Name\",\n          required: true,\n          value: cityName,\n          onChange: e => setCityName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-info\",\n          type: \"submit\",\n          children: \"Add City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCityForm, \"12wOx+cMTdbb2TTJ56KLWccy2IA=\");\n_c = AddCityForm;\nexport default AddCityForm;\nvar _c;\n$RefreshReg$(_c, \"AddCityForm\");","map":{"version":3,"names":["React","useState","AJAX","PROXY","jsxDEV","_jsxDEV","AddCityForm","cities","onCityAdded","showNotification","_s","cityName","setCityName","getCSRFToken","match","document","cookie","RegExp","validateCity","name","url","encodeURIComponent","fetch","then","response","ok","Error","json","data","currentConditions","days","length","handleSubmit","e","preventDefault","trimmedName","trim","console","log","some","city","toLowerCase","type","message","formData","FormData","target","method","credentials","headers","body","res","status","errors","Object","values","join","catch","err","error","id","onSubmit","children","className","placeholder","required","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AJAX, PROXY } from '../constant';\n\nconst AddCityForm = ({ cities = [], onCityAdded, showNotification }) => {\n  const [cityName, setCityName] = useState('');\n\n  // Retrieve CSRF token from cookies.\n  const getCSRFToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));\n    return match ? match[2] : '';\n  };\n\n  // Validate city using the Django proxy endpoint.\n  const validateCity = (name) => {\n    const url = `${PROXY}weather/${encodeURIComponent(name)}/`;\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"City not found\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.currentConditions || (data.days && data.days.length > 0)) {\n          return true;\n        }\n        throw new Error(\"City not found\");\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const trimmedName = cityName.trim();\n    if (!trimmedName) return;\n\n    // Log current cities for debugging.\n    console.log(\"Existing cities:\", cities);\n\n    // Check for duplicate city.\n    if ((cities || []).some(city => city.name && city.name.toLowerCase() === trimmedName.toLowerCase())) {\n      showNotification({\n        type: 'danger',\n        message: `City '${trimmedName}' already exists in the list!`\n      });\n      return;\n    }\n\n    // First, validate the city via the proxy.\n    validateCity(trimmedName)\n      .then(() => {\n        const formData = new FormData(e.target);\n        fetch(`${AJAX}cities/add/`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'X-CSRFToken': getCSRFToken()\n          },\n          body: formData\n        })\n          .then(res => res.json())\n          .then(data => {\n            if (data.status === 'success') {\n              showNotification({\n                type: 'success',\n                message: 'City added successfully!'\n              });\n              onCityAdded(data.city);\n              setCityName('');\n            } else {\n              showNotification({\n                type: 'danger',\n                message: data.errors\n                  ? Object.values(data.errors).join(', ')\n                  : 'City already exists!'\n              });\n            }\n          })\n          .catch(err => {\n            console.error('Error adding city:', err);\n            showNotification({\n              type: 'danger',\n              message: `Error adding city '${trimmedName}'`\n            });\n          });\n      })\n      .catch(err => {\n        console.error(\"City validation failed:\", err);\n        showNotification({\n          type: 'danger',\n          message: `City '${trimmedName}' does not exist in the world!`\n        });\n      });\n  };\n\n  return (\n    <form id=\"addCityForm\" onSubmit={handleSubmit}>\n      <div className=\"field has-addons\">\n        <div className=\"control is-expanded\">\n          <input\n            className=\"input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"City Name\"\n            required\n            value={cityName}\n            onChange={e => setCityName(e.target.value)}\n          />\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-info\" type=\"submit\">\n            Add City\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddCityForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM,GAAG,EAAE;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAACF,KAAK,CAAC,IAAIG,MAAM,CAAC,wBAAwB,CAAC,CAAC;IACzE,OAAOH,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;EAC9B,CAAC;;EAED;EACA,MAAMI,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,GAAG,GAAG,GAAGjB,KAAK,WAAWkB,kBAAkB,CAACF,IAAI,CAAC,GAAG;IAC1D,OAAOG,KAAK,CAACF,GAAG,CAAC,CACdG,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,iBAAiB,IAAKD,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACE,IAAI,CAACC,MAAM,GAAG,CAAE,EAAE;QACjE,OAAO,IAAI;MACb;MACA,MAAM,IAAIL,KAAK,CAAC,gBAAgB,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;EAED,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAGxB,QAAQ,CAACyB,IAAI,CAAC,CAAC;IACnC,IAAI,CAACD,WAAW,EAAE;;IAElB;IACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE/B,MAAM,CAAC;;IAEvC;IACA,IAAI,CAACA,MAAM,IAAI,EAAE,EAAEgC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACrB,IAAI,IAAIqB,IAAI,CAACrB,IAAI,CAACsB,WAAW,CAAC,CAAC,KAAKN,WAAW,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE;MACnGhC,gBAAgB,CAAC;QACfiC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,SAASR,WAAW;MAC/B,CAAC,CAAC;MACF;IACF;;IAEA;IACAjB,YAAY,CAACiB,WAAW,CAAC,CACtBZ,IAAI,CAAC,MAAM;MACV,MAAMqB,QAAQ,GAAG,IAAIC,QAAQ,CAACZ,CAAC,CAACa,MAAM,CAAC;MACvCxB,KAAK,CAAC,GAAGpB,IAAI,aAAa,EAAE;QAC1B6C,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UACP,aAAa,EAAEpC,YAAY,CAAC;QAC9B,CAAC;QACDqC,IAAI,EAAEN;MACR,CAAC,CAAC,CACCrB,IAAI,CAAC4B,GAAG,IAAIA,GAAG,CAACxB,IAAI,CAAC,CAAC,CAAC,CACvBJ,IAAI,CAACK,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACwB,MAAM,KAAK,SAAS,EAAE;UAC7B3C,gBAAgB,CAAC;YACfiC,IAAI,EAAE,SAAS;YACfC,OAAO,EAAE;UACX,CAAC,CAAC;UACFnC,WAAW,CAACoB,IAAI,CAACY,IAAI,CAAC;UACtB5B,WAAW,CAAC,EAAE,CAAC;QACjB,CAAC,MAAM;UACLH,gBAAgB,CAAC;YACfiC,IAAI,EAAE,QAAQ;YACdC,OAAO,EAAEf,IAAI,CAACyB,MAAM,GAChBC,MAAM,CAACC,MAAM,CAAC3B,IAAI,CAACyB,MAAM,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,GACrC;UACN,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZrB,OAAO,CAACsB,KAAK,CAAC,oBAAoB,EAAED,GAAG,CAAC;QACxCjD,gBAAgB,CAAC;UACfiC,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE,sBAAsBR,WAAW;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,CACDsB,KAAK,CAACC,GAAG,IAAI;MACZrB,OAAO,CAACsB,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;MAC7CjD,gBAAgB,CAAC;QACfiC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,SAASR,WAAW;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACE9B,OAAA;IAAMuD,EAAE,EAAC,aAAa;IAACC,QAAQ,EAAE7B,YAAa;IAAA8B,QAAA,eAC5CzD,OAAA;MAAK0D,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BzD,OAAA;QAAK0D,SAAS,EAAC,qBAAqB;QAAAD,QAAA,eAClCzD,OAAA;UACE0D,SAAS,EAAC,OAAO;UACjB5C,IAAI,EAAC,MAAM;UACXuB,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,WAAW;UACvBC,QAAQ;UACRC,KAAK,EAAEvD,QAAS;UAChBwD,QAAQ,EAAElC,CAAC,IAAIrB,WAAW,CAACqB,CAAC,CAACa,MAAM,CAACoB,KAAK;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlE,OAAA;QAAK0D,SAAS,EAAC,SAAS;QAAAD,QAAA,eACtBzD,OAAA;UAAQ0D,SAAS,EAAC,gBAAgB;UAACrB,IAAI,EAAC,QAAQ;UAAAoB,QAAA,EAAC;QAEjD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC7D,EAAA,CAjHIJ,WAAW;AAAAkE,EAAA,GAAXlE,WAAW;AAmHjB,eAAeA,WAAW;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}