{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCityForm = ({\n  onCityAdded,\n  showNotification\n}) => {\n  _s();\n  const [cityName, setCityName] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!cityName.trim()) return;\n    const formData = new FormData();\n    formData.append('name', cityName.trim());\n\n    // Call AJAX endpoint for creating a city.\n    fetch('/ajax/cities/add/', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value\n      },\n      body: formData\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        setCityName('');\n        showNotification({\n          type: 'success',\n          message: 'City added successfully!'\n        });\n        onCityAdded(); // Trigger a re-sync in App.js.\n      } else {\n        showNotification({\n          type: 'danger',\n          message: data.errors ? Object.values(data.errors).join(', ') : 'City already exists!'\n        });\n      }\n    }).catch(err => {\n      console.error('Error adding city:', err);\n      showNotification({\n        type: 'danger',\n        message: 'City does not exist in the world!'\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"addCityForm\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field has-addons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control is-expanded\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"City Name\",\n          value: cityName,\n          onChange: e => setCityName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-info\",\n          type: \"submit\",\n          children: \"Add City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCityForm, \"12wOx+cMTdbb2TTJ56KLWccy2IA=\");\n_c = AddCityForm;\nexport default AddCityForm;\nvar _c;\n$RefreshReg$(_c, \"AddCityForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddCityForm","onCityAdded","showNotification","_s","cityName","setCityName","handleSubmit","e","preventDefault","trim","formData","FormData","append","fetch","method","credentials","headers","document","querySelector","value","body","then","response","json","data","status","type","message","errors","Object","values","join","catch","err","console","error","id","onSubmit","children","className","name","placeholder","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddCityForm = ({ onCityAdded, showNotification }) => {\n  const [cityName, setCityName] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!cityName.trim()) return;\n\n    const formData = new FormData();\n    formData.append('name', cityName.trim());\n\n    // Call AJAX endpoint for creating a city.\n    fetch('/ajax/cities/add/', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status === 'success') {\n          setCityName('');\n          showNotification({ type: 'success', message: 'City added successfully!' });\n          onCityAdded(); // Trigger a re-sync in App.js.\n        } else {\n          showNotification({ type: 'danger', message: data.errors ? Object.values(data.errors).join(', ') : 'City already exists!' });\n        }\n      })\n      .catch(err => {\n        console.error('Error adding city:', err);\n        showNotification({ type: 'danger', message: 'City does not exist in the world!' });\n      });\n  };\n\n  return (\n    <form id=\"addCityForm\" onSubmit={handleSubmit}>\n      <div className=\"field has-addons\">\n        <div className=\"control is-expanded\">\n          <input\n            className=\"input\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"City Name\"\n            value={cityName}\n            onChange={(e) => setCityName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-info\" type=\"submit\">Add City</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddCityForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}