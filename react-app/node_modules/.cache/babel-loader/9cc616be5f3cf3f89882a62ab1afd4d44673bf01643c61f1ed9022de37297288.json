{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Marquee from './components/Marquee';\nimport AddCityForm from './components/AddCityForm';\nimport CityList from './components/CityList';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport { API } from './constant'; // Make sure this points to \"http://127.0.0.1:8000/api/\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Use API endpoint to fetch city list\n  const [cities, setCities] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  // This function will sync cities using the API endpoint.\n  const syncCities = useCallback(() => {\n    fetch(API + 'cities/', {\n      credentials: 'include'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to fetch cities: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      setCities(data);\n      localStorage.setItem('cities', JSON.stringify(data));\n    }).catch(err => {\n      console.error(\"Error syncing cities:\", err);\n      setNotification({\n        type: 'danger',\n        message: 'Error syncing cities'\n      });\n    });\n  }, []);\n\n  // Sync cities on initial load.\n  useEffect(() => {\n    syncCities();\n  }, [syncCities]);\n  const showNotification = notif => {\n    setNotification(notif);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // After adding or deleting a city, we re-sync the list from the API.\n  const addCity = newCity => {\n    syncCities();\n  };\n  const removeCity = cityId => {\n    syncCities();\n  };\n\n  // Optionally, set CSRF cookie if needed (or you can remove this if not using CSRF)\n  useEffect(() => {\n    fetch('/set-csrf/', {\n      credentials: 'include'\n    }).then(response => console.log(\"Set CSRF response status:\", response.status)).catch(err => console.error(\"Error setting CSRF cookie:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marquee, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      style: {\n        background: \"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-offset-4 is-4\",\n            children: [/*#__PURE__*/_jsxDEV(AddCityForm, {\n              cities: cities,\n              onCityAdded: addCity,\n              showNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n              type: notification.type,\n              message: notification.message,\n              onClose: () => setNotification(null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: /*#__PURE__*/_jsxDEV(CityList, {\n            cities: cities,\n            onCityDeleted: removeCity,\n            showNotification: showNotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        borderTop: \"2px solid #000\",\n        marginBottom: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TWTqKDMedY2XjdXXHS2eJrh6KbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Header","Hero","Marquee","AddCityForm","CityList","Footer","Notification","API","jsxDEV","_jsxDEV","App","_s","cities","setCities","notification","setNotification","syncCities","fetch","credentials","then","response","ok","Error","statusText","json","data","localStorage","setItem","JSON","stringify","catch","err","console","error","type","message","showNotification","notif","window","scrollTo","top","behavior","addCity","newCity","removeCity","cityId","log","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","background","backgroundSize","onCityAdded","onClose","onCityDeleted","borderTop","marginBottom","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Marquee from './components/Marquee';\nimport AddCityForm from './components/AddCityForm';\nimport CityList from './components/CityList';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport { API } from './constant';  // Make sure this points to \"http://127.0.0.1:8000/api/\"\n\nfunction App() {\n  // Use API endpoint to fetch city list\n  const [cities, setCities] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  // This function will sync cities using the API endpoint.\n  const syncCities = useCallback(() => {\n    fetch(API + 'cities/', { credentials: 'include' })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Failed to fetch cities: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        setCities(data);\n        localStorage.setItem('cities', JSON.stringify(data));\n      })\n      .catch(err => {\n        console.error(\"Error syncing cities:\", err);\n        setNotification({ type: 'danger', message: 'Error syncing cities' });\n      });\n  }, []);\n\n  // Sync cities on initial load.\n  useEffect(() => {\n    syncCities();\n  }, [syncCities]);\n\n  const showNotification = (notif) => {\n    setNotification(notif);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // After adding or deleting a city, we re-sync the list from the API.\n  const addCity = (newCity) => {\n    syncCities();\n  };\n\n  const removeCity = (cityId) => {\n    syncCities();\n  };\n\n  // Optionally, set CSRF cookie if needed (or you can remove this if not using CSRF)\n  useEffect(() => {\n    fetch('/set-csrf/', { credentials: 'include' })\n      .then(response => console.log(\"Set CSRF response status:\", response.status))\n      .catch(err => console.error(\"Error setting CSRF cookie:\", err));\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <Hero />\n      <Marquee />\n      <section\n        className=\"section\"\n        style={{\n          background: \"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",\n          backgroundSize: 'cover'\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-offset-4 is-4\">\n              <AddCityForm\n                cities={cities}\n                onCityAdded={addCity}\n                showNotification={showNotification}\n              />\n              {notification && (\n                <Notification\n                  type={notification.type}\n                  message={notification.message}\n                  onClose={() => setNotification(null)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <CityList\n              cities={cities}\n              onCityDeleted={removeCity}\n              showNotification={showNotification}\n            />\n          </div>\n        </div>\n      </section>\n      <hr style={{ borderTop: \"2px solid #000\", marginBottom: 0 }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}