{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AJAX } from '../constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityCard = ({\n  city,\n  onDelete,\n  showNotification\n}) => {\n  _s();\n  const [weather, setWeather] = useState({\n    temp: \"[??]째 C\",\n    cond: \"No information\",\n    icon: \"/media/none.png\"\n  });\n  const getLocalTime = () => new Date();\n  const parseSunTime = timeStr => timeStr ? new Date(timeStr) : null;\n  useEffect(() => {\n    const fetchWeatherData = () => {\n      const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n      const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n      fetch(apiUrl).then(response => {\n        if (!response.ok) throw new Error(\"City not found\");\n        return response.json();\n      }).then(data => {\n        const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : null);\n        if (currentData && typeof currentData.temp !== 'undefined' && currentData.conditions) {\n          let sunriseEpoch, sunsetEpoch;\n          if (currentData.sunriseEpoch && currentData.sunsetEpoch) {\n            sunriseEpoch = currentData.sunriseEpoch;\n            sunsetEpoch = currentData.sunsetEpoch;\n          } else if (data.days && data.days.length > 0) {\n            sunriseEpoch = data.days[0].sunriseEpoch;\n            sunsetEpoch = data.days[0].sunsetEpoch;\n          }\n          let dayTime = true;\n          if (sunriseEpoch && sunsetEpoch) {\n            const nowEpoch = Date.now() / 1000;\n            dayTime = nowEpoch >= sunriseEpoch && nowEpoch < sunsetEpoch;\n          } else {\n            const sunrise = currentData.sunrise ? parseSunTime(currentData.sunrise) : null;\n            const sunset = currentData.sunset ? parseSunTime(currentData.sunset) : null;\n            dayTime = sunrise && sunset ? getLocalTime() >= sunrise && getLocalTime() < sunset : true;\n          }\n          let iconFile = \"none.png\";\n          const condition = currentData.conditions.toLowerCase();\n          if (condition.includes(\"thunder\")) {\n            if (condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"thunder-showers-day.png\" : \"thunder-showers-night.png\";\n            } else if (condition.includes(\"rain\")) {\n              iconFile = \"thunder-rain.png\";\n            } else {\n              iconFile = \"thunder.png\";\n            }\n          } else if (condition.includes(\"rain\") && condition.includes(\"snow\")) {\n            iconFile = \"rain-snow.png\";\n          } else if (condition.includes(\"rain\") && condition.includes(\"showers\")) {\n            iconFile = dayTime ? \"showers-day.png\" : \"showers-night.png\";\n          } else if (condition.includes(\"rain\")) {\n            iconFile = \"rain.png\";\n          } else if (condition.includes(\"snow\") && condition.includes(\"showers\")) {\n            iconFile = dayTime ? \"snow-showers-day.png\" : \"snow-showers-night.png\";\n          } else if (condition.includes(\"snow\")) {\n            iconFile = \"snow.png\";\n          } else if (condition.includes(\"sleet\")) {\n            iconFile = \"sleet.png\";\n          } else if (condition.includes(\"fog\")) {\n            iconFile = \"fog.png\";\n          } else if (condition.includes(\"hail\")) {\n            iconFile = \"hail.png\";\n          } else if (condition.includes(\"wind\")) {\n            iconFile = \"wind.png\";\n          } else if (condition.includes(\"clear\")) {\n            iconFile = dayTime ? \"clear-day.png\" : \"clear-night.png\";\n          } else if (condition.includes(\"partly\") && condition.includes(\"cloudy\")) {\n            iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n          } else if (condition.includes(\"overcast\")) {\n            iconFile = \"cloudy.png\";\n          } else if (condition.includes(\"cloudy\")) {\n            if (currentData.cloudcover !== undefined && currentData.cloudcover < 80) {\n              iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n            } else {\n              iconFile = \"cloudy.png\";\n            }\n          }\n          setWeather({\n            temp: `${currentData.temp}째 C`,\n            cond: currentData.conditions,\n            icon: `/media/${iconFile}`\n          });\n        } else {\n          console.error(\"Incomplete data for city:\", city.name);\n          setWeather({\n            temp: \"[??]째 C\",\n            cond: \"No information\",\n            icon: \"/media/none.png\"\n          });\n        }\n      }).catch(err => {\n        console.error(\"Error fetching weather for\", city.name, err);\n        setWeather({\n          temp: \"[??]째 C\",\n          cond: \"No information\",\n          icon: \"/media/none.png\"\n        });\n      });\n    };\n    fetchWeatherData();\n  }, [city.name]);\n  const handleDelete = () => {\n    // For default cities, delete directly.\n    if ([\"tokyo\", \"london\", \"newyork\", \"paris\"].includes(String(city.id).toLowerCase())) {\n      onDelete(city.id);\n      showNotification({\n        type: 'success',\n        message: `Successfully deleted '${city.name}'`\n      });\n      return;\n    }\n    fetch(`${AJAX}cities/${city.id}/delete/`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(async res => {\n      let data = {};\n      try {\n        data = await res.json();\n      } catch (e) {\n        if (res.ok) data.success = true;\n      }\n      if (res.ok && (data.status === 'success' || data.success)) {\n        onDelete(city.id);\n        showNotification({\n          type: 'success',\n          message: `Successfully deleted '${city.name}'`\n        });\n      } else {\n        const errMsg = data.message || \"Error deleting city!\";\n        console.error(\"Error deleting city\", errMsg);\n        showNotification({\n          type: 'danger',\n          message: errMsg\n        });\n      }\n    }).catch(err => {\n      console.error(\"Network error deleting city\", err);\n      showNotification({\n        type: 'danger',\n        message: \"Network error or server not reachable!\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box city-box\",\n    \"data-city-id\": city.id,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"media\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-left\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"image is-64x64\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              style: {\n                fontWeight: 'normal'\n              },\n              children: city.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 90\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              id: `temp-${city.id}`,\n              children: weather.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"condition\",\n              id: `cond-${city.id}`,\n              children: weather.cond\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(CityCard, \"PBG1ES41pQ8gKU0dHdvUBp4g8b4=\");\n_c = CityCard;\nexport default CityCard;\nvar _c;\n$RefreshReg$(_c, \"CityCard\");","map":{"version":3,"names":["React","useEffect","useState","AJAX","jsxDEV","_jsxDEV","CityCard","city","onDelete","showNotification","_s","weather","setWeather","temp","cond","icon","getLocalTime","Date","parseSunTime","timeStr","fetchWeatherData","apikey","apiUrl","encodeURIComponent","name","fetch","then","response","ok","Error","json","data","currentData","currentConditions","days","length","conditions","sunriseEpoch","sunsetEpoch","dayTime","nowEpoch","now","sunrise","sunset","iconFile","condition","toLowerCase","includes","cloudcover","undefined","console","error","catch","err","handleDelete","String","id","type","message","method","credentials","res","e","success","status","errMsg","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AJAX } from '../constant';\n\nconst CityCard = ({ city, onDelete, showNotification }) => {\n  const [weather, setWeather] = useState({\n    temp: \"[??]째 C\",\n    cond: \"No information\",\n    icon: \"/media/none.png\"\n  });\n\n  const getLocalTime = () => new Date();\n  const parseSunTime = (timeStr) => timeStr ? new Date(timeStr) : null;\n\n  useEffect(() => {\n    const fetchWeatherData = () => {\n      const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n      const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n      fetch(apiUrl)\n        .then(response => {\n          if (!response.ok) throw new Error(\"City not found\");\n          return response.json();\n        })\n        .then(data => {\n          const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : null);\n          if (currentData && typeof currentData.temp !== 'undefined' && currentData.conditions) {\n            let sunriseEpoch, sunsetEpoch;\n            if (currentData.sunriseEpoch && currentData.sunsetEpoch) {\n              sunriseEpoch = currentData.sunriseEpoch;\n              sunsetEpoch = currentData.sunsetEpoch;\n            } else if (data.days && data.days.length > 0) {\n              sunriseEpoch = data.days[0].sunriseEpoch;\n              sunsetEpoch = data.days[0].sunsetEpoch;\n            }\n            let dayTime = true;\n            if (sunriseEpoch && sunsetEpoch) {\n              const nowEpoch = Date.now() / 1000;\n              dayTime = (nowEpoch >= sunriseEpoch && nowEpoch < sunsetEpoch);\n            } else {\n              const sunrise = currentData.sunrise ? parseSunTime(currentData.sunrise) : null;\n              const sunset = currentData.sunset ? parseSunTime(currentData.sunset) : null;\n              dayTime = (sunrise && sunset) ? (getLocalTime() >= sunrise && getLocalTime() < sunset) : true;\n            }\n            let iconFile = \"none.png\";\n            const condition = currentData.conditions.toLowerCase();\n            if (condition.includes(\"thunder\")) {\n              if (condition.includes(\"showers\")) {\n                iconFile = dayTime ? \"thunder-showers-day.png\" : \"thunder-showers-night.png\";\n              } else if (condition.includes(\"rain\")) {\n                iconFile = \"thunder-rain.png\";\n              } else {\n                iconFile = \"thunder.png\";\n              }\n            } else if (condition.includes(\"rain\") && condition.includes(\"snow\")) {\n              iconFile = \"rain-snow.png\";\n            } else if (condition.includes(\"rain\") && condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"showers-day.png\" : \"showers-night.png\";\n            } else if (condition.includes(\"rain\")) {\n              iconFile = \"rain.png\";\n            } else if (condition.includes(\"snow\") && condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"snow-showers-day.png\" : \"snow-showers-night.png\";\n            } else if (condition.includes(\"snow\")) {\n              iconFile = \"snow.png\";\n            } else if (condition.includes(\"sleet\")) {\n              iconFile = \"sleet.png\";\n            } else if (condition.includes(\"fog\")) {\n              iconFile = \"fog.png\";\n            } else if (condition.includes(\"hail\")) {\n              iconFile = \"hail.png\";\n            } else if (condition.includes(\"wind\")) {\n              iconFile = \"wind.png\";\n            } else if (condition.includes(\"clear\")) {\n              iconFile = dayTime ? \"clear-day.png\" : \"clear-night.png\";\n            } else if (condition.includes(\"partly\") && condition.includes(\"cloudy\")) {\n              iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n            } else if (condition.includes(\"overcast\")) {\n              iconFile = \"cloudy.png\";\n            } else if (condition.includes(\"cloudy\")) {\n              if (currentData.cloudcover !== undefined && currentData.cloudcover < 80) {\n                iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n              } else {\n                iconFile = \"cloudy.png\";\n              }\n            }\n            setWeather({\n              temp: `${currentData.temp}째 C`,\n              cond: currentData.conditions,\n              icon: `/media/${iconFile}`\n            });\n          } else {\n            console.error(\"Incomplete data for city:\", city.name);\n            setWeather({\n              temp: \"[??]째 C\",\n              cond: \"No information\",\n              icon: \"/media/none.png\"\n            });\n          }\n        })\n        .catch(err => {\n          console.error(\"Error fetching weather for\", city.name, err);\n          setWeather({\n            temp: \"[??]째 C\",\n            cond: \"No information\",\n            icon: \"/media/none.png\"\n          });\n        });\n    };\n\n    fetchWeatherData();\n  }, [city.name]);\n\n  const handleDelete = () => {\n    // For default cities, delete directly.\n    if ([\"tokyo\", \"london\", \"newyork\", \"paris\"].includes(String(city.id).toLowerCase())) {\n      onDelete(city.id);\n      showNotification({ type: 'success', message: `Successfully deleted '${city.name}'` });\n      return;\n    }\n    fetch(`${AJAX}cities/${city.id}/delete/`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(async res => {\n        let data = {};\n        try {\n          data = await res.json();\n        } catch (e) {\n          if (res.ok) data.success = true;\n        }\n        if (res.ok && (data.status === 'success' || data.success)) {\n          onDelete(city.id);\n          showNotification({ type: 'success', message: `Successfully deleted '${city.name}'` });\n        } else {\n          const errMsg = data.message || \"Error deleting city!\";\n          console.error(\"Error deleting city\", errMsg);\n          showNotification({ type: 'danger', message: errMsg });\n        }\n      })\n      .catch(err => {\n        console.error(\"Network error deleting city\", err);\n        showNotification({ type: 'danger', message: \"Network error or server not reachable!\" });\n      });\n  };\n\n  return (\n    <div className=\"box city-box\" data-city-id={city.id}>\n      <article className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-64x64\">\n            <img src={weather.icon} alt=\"Weather Icon\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <span className=\"title\" style={{ fontWeight: 'normal' }}>{city.name}</span><br />\n              <span className=\"subtitle\" id={`temp-${city.id}`}>{weather.temp}</span><br />\n              <span className=\"condition\" id={`cond-${city.id}`}>{weather.cond}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"media-right\">\n          <button className=\"delete\" onClick={handleDelete}></button>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default CityCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}