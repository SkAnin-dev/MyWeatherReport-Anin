{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityCard = ({\n  city,\n  onDelete\n}) => {\n  _s();\n  const [weather, setWeather] = useState({\n    temp: \"[??]째 C\",\n    cond: \"No information\",\n    icon: \"/media/none.png\"\n  });\n\n  // Helper functions for time calculations.\n  const getLocalTime = () => new Date();\n  const parseSunTime = timeStr => timeStr ? new Date(timeStr) : null;\n  const isDayTime = (sunrise, sunset) => {\n    const currentTime = getLocalTime();\n    if (!sunrise || !sunset) return true;\n    return currentTime >= sunrise && currentTime < sunset;\n  };\n  const fetchWeatherData = () => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    const fetchPromise = fetch(apiUrl).then(response => {\n      if (!response.ok) throw new Error(\"City not found\");\n      return response.json();\n    }).then(data => {\n      const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : null);\n      if (currentData && typeof currentData.temp !== 'undefined' && currentData.conditions) {\n        let sunriseEpoch, sunsetEpoch;\n        if (currentData.sunriseEpoch && currentData.sunsetEpoch) {\n          sunriseEpoch = currentData.sunriseEpoch;\n          sunsetEpoch = currentData.sunsetEpoch;\n        } else if (data.days && data.days.length > 0) {\n          sunriseEpoch = data.days[0].sunriseEpoch;\n          sunsetEpoch = data.days[0].sunsetEpoch;\n        }\n        let dayTime = true;\n        if (sunriseEpoch && sunsetEpoch) {\n          const nowEpoch = Date.now() / 1000;\n          dayTime = nowEpoch >= sunriseEpoch && nowEpoch < sunsetEpoch;\n        } else {\n          let sunrise = currentData.sunrise ? parseSunTime(currentData.sunrise) : null;\n          let sunset = currentData.sunset ? parseSunTime(currentData.sunset) : null;\n          dayTime = sunrise && sunset ? getLocalTime() >= sunrise && getLocalTime() < sunset : true;\n        }\n\n        // Icon selection logic exactly as in weather.js.\n        let iconFile = \"none.png\";\n        const condition = currentData.conditions.toLowerCase();\n        if (condition.includes(\"thunder\")) {\n          if (condition.includes(\"showers\")) {\n            iconFile = dayTime ? \"thunder-showers-day.png\" : \"thunder-showers-night.png\";\n          } else if (condition.includes(\"rain\")) {\n            iconFile = \"thunder-rain.png\";\n          } else {\n            iconFile = \"thunder.png\";\n          }\n        } else if (condition.includes(\"rain\") && condition.includes(\"snow\")) {\n          iconFile = \"rain-snow.png\";\n        } else if (condition.includes(\"rain\") && condition.includes(\"showers\")) {\n          iconFile = dayTime ? \"showers-day.png\" : \"showers-night.png\";\n        } else if (condition.includes(\"rain\")) {\n          iconFile = \"rain.png\";\n        } else if (condition.includes(\"snow\") && condition.includes(\"showers\")) {\n          iconFile = dayTime ? \"snow-showers-day.png\" : \"snow-showers-night.png\";\n        } else if (condition.includes(\"snow\")) {\n          iconFile = \"snow.png\";\n        } else if (condition.includes(\"sleet\")) {\n          iconFile = \"sleet.png\";\n        } else if (condition.includes(\"fog\")) {\n          iconFile = \"fog.png\";\n        } else if (condition.includes(\"hail\")) {\n          iconFile = \"hail.png\";\n        } else if (condition.includes(\"wind\")) {\n          iconFile = \"wind.png\";\n        } else if (condition.includes(\"clear\")) {\n          iconFile = dayTime ? \"clear-day.png\" : \"clear-night.png\";\n        } else if (condition.includes(\"partly\") && condition.includes(\"cloudy\")) {\n          iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n        } else if (condition.includes(\"overcast\")) {\n          iconFile = \"cloudy.png\";\n        } else if (condition.includes(\"cloudy\")) {\n          if (currentData.cloudcover !== undefined && currentData.cloudcover < 80) {\n            iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n          } else {\n            iconFile = \"cloudy.png\";\n          }\n        }\n        setWeather({\n          temp: `${currentData.temp}째 C`,\n          cond: currentData.conditions,\n          icon: `/media/${iconFile}`\n        });\n      } else {\n        console.error(\"Incomplete data for city:\", city.name);\n        setWeather({\n          temp: \"[??]째 C\",\n          cond: \"No information\",\n          icon: \"/media/none.png\"\n        });\n      }\n    }).catch(err => {\n      console.error(\"Error fetching weather for\", city.name, err);\n      setWeather({\n        temp: \"[??]째 C\",\n        cond: \"No information\",\n        icon: \"/media/none.png\"\n      });\n    });\n    const timeoutPromise = new Promise(resolve => setTimeout(resolve, 10000));\n    Promise.race([fetchPromise, timeoutPromise]);\n  };\n  useEffect(() => {\n    fetchWeatherData();\n  }, [city.name]);\n  const handleDelete = () => {\n    // For default cities, delete without calling AJAX.\n    if ([\"tokyo\", \"london\", \"newyork\"].includes(city.id.toLowerCase())) {\n      onDelete(city.id);\n      return;\n    }\n    fetch(`/ajax/cities/${city.id}/delete/`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(async res => {\n      let data = {};\n      try {\n        data = await res.json();\n      } catch (e) {\n        if (res.ok) data.success = true;\n      }\n      if (res.ok && (data.status === 'success' || data.success)) {\n        onDelete(city.id);\n      } else {\n        console.error(\"Error deleting city\", data.error);\n      }\n    }).catch(err => console.error(\"Network error deleting city\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box city-box\",\n    \"data-city-id\": city.id,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"media\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-left\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"image is-64x64\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              style: {\n                fontWeight: 'normal'\n              },\n              children: city.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 90\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              id: `temp-${city.id}`,\n              children: weather.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 86\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"condition\",\n              id: `cond-${city.id}`,\n              children: weather.cond\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(CityCard, \"PBG1ES41pQ8gKU0dHdvUBp4g8b4=\");\n_c = CityCard;\nexport default CityCard;\nvar _c;\n$RefreshReg$(_c, \"CityCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CityCard","city","onDelete","_s","weather","setWeather","temp","cond","icon","getLocalTime","Date","parseSunTime","timeStr","isDayTime","sunrise","sunset","currentTime","fetchWeatherData","apikey","apiUrl","encodeURIComponent","name","fetchPromise","fetch","then","response","ok","Error","json","data","currentData","currentConditions","days","length","conditions","sunriseEpoch","sunsetEpoch","dayTime","nowEpoch","now","iconFile","condition","toLowerCase","includes","cloudcover","undefined","console","error","catch","err","timeoutPromise","Promise","resolve","setTimeout","race","handleDelete","id","method","credentials","res","e","success","status","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CityCard = ({ city, onDelete }) => {\n  const [weather, setWeather] = useState({\n    temp: \"[??]째 C\",\n    cond: \"No information\",\n    icon: \"/media/none.png\"\n  });\n\n  // Helper functions for time calculations.\n  const getLocalTime = () => new Date();\n  const parseSunTime = (timeStr) => timeStr ? new Date(timeStr) : null;\n  const isDayTime = (sunrise, sunset) => {\n    const currentTime = getLocalTime();\n    if (!sunrise || !sunset) return true;\n    return currentTime >= sunrise && currentTime < sunset;\n  };\n\n  const fetchWeatherData = () => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n\n    const fetchPromise = fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) throw new Error(\"City not found\");\n        return response.json();\n      })\n      .then(data => {\n        const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : null);\n        if (currentData && typeof currentData.temp !== 'undefined' && currentData.conditions) {\n          let sunriseEpoch, sunsetEpoch;\n          if (currentData.sunriseEpoch && currentData.sunsetEpoch) {\n            sunriseEpoch = currentData.sunriseEpoch;\n            sunsetEpoch = currentData.sunsetEpoch;\n          } else if (data.days && data.days.length > 0) {\n            sunriseEpoch = data.days[0].sunriseEpoch;\n            sunsetEpoch = data.days[0].sunsetEpoch;\n          }\n          \n          let dayTime = true;\n          if (sunriseEpoch && sunsetEpoch) {\n            const nowEpoch = Date.now() / 1000;\n            dayTime = (nowEpoch >= sunriseEpoch && nowEpoch < sunsetEpoch);\n          } else {\n            let sunrise = currentData.sunrise ? parseSunTime(currentData.sunrise) : null;\n            let sunset = currentData.sunset ? parseSunTime(currentData.sunset) : null;\n            dayTime = (sunrise && sunset) ? (getLocalTime() >= sunrise && getLocalTime() < sunset) : true;\n          }\n\n          // Icon selection logic exactly as in weather.js.\n          let iconFile = \"none.png\";\n          const condition = currentData.conditions.toLowerCase();\n          if (condition.includes(\"thunder\")) {\n            if (condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"thunder-showers-day.png\" : \"thunder-showers-night.png\";\n            } else if (condition.includes(\"rain\")) {\n              iconFile = \"thunder-rain.png\";\n            } else {\n              iconFile = \"thunder.png\";\n            }\n          } else if (condition.includes(\"rain\") && condition.includes(\"snow\")) {\n            iconFile = \"rain-snow.png\";\n          } else if (condition.includes(\"rain\") && condition.includes(\"showers\")) {\n            iconFile = dayTime ? \"showers-day.png\" : \"showers-night.png\";\n          } else if (condition.includes(\"rain\")) {\n            iconFile = \"rain.png\";\n          } else if (condition.includes(\"snow\") && condition.includes(\"showers\")) {\n            iconFile = dayTime ? \"snow-showers-day.png\" : \"snow-showers-night.png\";\n          } else if (condition.includes(\"snow\")) {\n            iconFile = \"snow.png\";\n          } else if (condition.includes(\"sleet\")) {\n            iconFile = \"sleet.png\";\n          } else if (condition.includes(\"fog\")) {\n            iconFile = \"fog.png\";\n          } else if (condition.includes(\"hail\")) {\n            iconFile = \"hail.png\";\n          } else if (condition.includes(\"wind\")) {\n            iconFile = \"wind.png\";\n          } else if (condition.includes(\"clear\")) {\n            iconFile = dayTime ? \"clear-day.png\" : \"clear-night.png\";\n          } else if (condition.includes(\"partly\") && condition.includes(\"cloudy\")) {\n            iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n          } else if (condition.includes(\"overcast\")) {\n            iconFile = \"cloudy.png\";\n          } else if (condition.includes(\"cloudy\")) {\n            if (currentData.cloudcover !== undefined && currentData.cloudcover < 80) {\n              iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n            } else {\n              iconFile = \"cloudy.png\";\n            }\n          }\n          setWeather({\n            temp: `${currentData.temp}째 C`,\n            cond: currentData.conditions,\n            icon: `/media/${iconFile}`\n          });\n        } else {\n          console.error(\"Incomplete data for city:\", city.name);\n          setWeather({\n            temp: \"[??]째 C\",\n            cond: \"No information\",\n            icon: \"/media/none.png\"\n          });\n        }\n      })\n      .catch(err => {\n        console.error(\"Error fetching weather for\", city.name, err);\n        setWeather({\n          temp: \"[??]째 C\",\n          cond: \"No information\",\n          icon: \"/media/none.png\"\n        });\n      });\n\n    const timeoutPromise = new Promise(resolve => setTimeout(resolve, 10000));\n    Promise.race([fetchPromise, timeoutPromise]);\n  };\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, [city.name]);\n\n  const handleDelete = () => {\n    // For default cities, delete without calling AJAX.\n    if ([\"tokyo\", \"london\", \"newyork\"].includes(city.id.toLowerCase())) {\n      onDelete(city.id);\n      return;\n    }\n    fetch(`/ajax/cities/${city.id}/delete/`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(async res => {\n        let data = {};\n        try {\n          data = await res.json();\n        } catch (e) {\n          if (res.ok) data.success = true;\n        }\n        if (res.ok && (data.status === 'success' || data.success)) {\n          onDelete(city.id);\n        } else {\n          console.error(\"Error deleting city\", data.error);\n        }\n      })\n      .catch(err => console.error(\"Network error deleting city\", err));\n  };\n\n  return (\n    <div className=\"box city-box\" data-city-id={city.id}>\n      <article className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-64x64\">\n            <img src={weather.icon} alt=\"Weather Icon\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <span className=\"title\" style={{ fontWeight: 'normal' }}>{city.name}</span><br />\n              <span className=\"subtitle\" id={`temp-${city.id}`}>{weather.temp}</span><br />\n              <span className=\"condition\" id={`cond-${city.id}`}>{weather.cond}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"media-right\">\n          <button className=\"delete\" onClick={handleDelete}></button>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default CityCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}