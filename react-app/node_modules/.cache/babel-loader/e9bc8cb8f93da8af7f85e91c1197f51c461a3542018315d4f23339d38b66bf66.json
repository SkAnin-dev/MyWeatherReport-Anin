{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import Header from'./components/Header';import Hero from'./components/Hero';import Marquee from'./components/Marquee';import AddCityForm from'./components/AddCityForm';import CityList from'./components/CityList';import Footer from'./components/Footer';import Notification from'./components/Notification';import{API}from'./constant';// The list of default cities is no longer used to auto-refresh deleted cities.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DEFAULT_CITIES=['Tokyo','New York','London'];function App(){// Initialize cities from localStorage as a fallback.\nconst[cities,setCities]=useState(()=>{const stored=localStorage.getItem('cities');return stored?JSON.parse(stored):[];});const[notification,setNotification]=useState(null);const formRef=useRef(null);// Update localStorage when cities change.\nconst updateLocalStorage=newCities=>{localStorage.setItem('cities',JSON.stringify(newCities));};// syncCities fetches the current list from the backend.\nconst syncCities=useCallback(()=>{fetch(API+'cities/',{credentials:'include'}).then(response=>response.json()).then(data=>{setCities(data);updateLocalStorage(data);// (Default cities are no longer re-added here.)\n}).catch(err=>console.error(\"Error syncing cities:\",err));},[]);// Initial sync on mount.\nuseEffect(()=>{syncCities();},[syncCities]);const showNotification=notif=>{setNotification(notif);window.scrollTo({top:0,behavior:'smooth'});};// For both add and delete actions, we simply sync the list.\nconst addCity=()=>{syncCities();};const removeCity=()=>{syncCities();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Hero,{}),/*#__PURE__*/_jsx(Marquee,{}),/*#__PURE__*/_jsx(\"section\",{className:\"section\",style:{background:\"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",backgroundSize:'cover'},children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"columns\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"column is-offset-4 is-4\",ref:formRef,children:[/*#__PURE__*/_jsx(AddCityForm,{cities:cities,onCityAdded:addCity,showNotification:showNotification}),notification&&/*#__PURE__*/_jsx(Notification,{type:notification.type,message:notification.message,onClose:()=>setNotification(null)})]})})})}),/*#__PURE__*/_jsx(\"section\",{className:\"section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"columns\",children:/*#__PURE__*/_jsx(CityList,{cities:cities,onCityDeleted:removeCity,showNotification:showNotification})})})}),/*#__PURE__*/_jsx(\"hr\",{style:{borderTop:\"2px solid #000\",marginBottom:0}}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Header","Hero","Marquee","AddCityForm","CityList","Footer","Notification","API","jsx","_jsx","jsxs","_jsxs","DEFAULT_CITIES","App","cities","setCities","stored","localStorage","getItem","JSON","parse","notification","setNotification","formRef","updateLocalStorage","newCities","setItem","stringify","syncCities","fetch","credentials","then","response","json","data","catch","err","console","error","showNotification","notif","window","scrollTo","top","behavior","addCity","removeCity","children","className","style","background","backgroundSize","ref","onCityAdded","type","message","onClose","onCityDeleted","borderTop","marginBottom"],"sources":["C:/Users/skahm/Downloads/MyWeatherReport/MyWeatherReport/react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Marquee from './components/Marquee';\nimport AddCityForm from './components/AddCityForm';\nimport CityList from './components/CityList';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport { API } from './constant';\n\n// The list of default cities is no longer used to auto-refresh deleted cities.\nconst DEFAULT_CITIES = ['Tokyo', 'New York', 'London'];\n\nfunction App() {\n  // Initialize cities from localStorage as a fallback.\n  const [cities, setCities] = useState(() => {\n    const stored = localStorage.getItem('cities');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [notification, setNotification] = useState(null);\n  const formRef = useRef(null);\n\n  // Update localStorage when cities change.\n  const updateLocalStorage = (newCities) => {\n    localStorage.setItem('cities', JSON.stringify(newCities));\n  };\n\n  // syncCities fetches the current list from the backend.\n  const syncCities = useCallback(() => {\n    fetch(API + 'cities/', { credentials: 'include' })\n      .then(response => response.json())\n      .then(data => {\n        setCities(data);\n        updateLocalStorage(data);\n        // (Default cities are no longer re-added here.)\n      })\n      .catch(err => console.error(\"Error syncing cities:\", err));\n  }, []);\n\n  // Initial sync on mount.\n  useEffect(() => {\n    syncCities();\n  }, [syncCities]);\n\n  const showNotification = (notif) => {\n    setNotification(notif);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // For both add and delete actions, we simply sync the list.\n  const addCity = () => {\n    syncCities();\n  };\n\n  const removeCity = () => {\n    syncCities();\n  };\n\n  return (\n    <div>\n      <Header />\n      <Hero />\n      <Marquee />\n      <section\n        className=\"section\"\n        style={{\n          background: \"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",\n          backgroundSize: 'cover'\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-offset-4 is-4\" ref={formRef}>\n              <AddCityForm\n                cities={cities}\n                onCityAdded={addCity}\n                showNotification={showNotification}\n              />\n              {notification && (\n                <Notification\n                  type={notification.type}\n                  message={notification.message}\n                  onClose={() => setNotification(null)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <CityList\n              cities={cities}\n              onCityDeleted={removeCity}\n              showNotification={showNotification}\n            />\n          </div>\n        </div>\n      </section>\n      <hr style={{ borderTop: \"2px solid #000\", marginBottom: 0 }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}