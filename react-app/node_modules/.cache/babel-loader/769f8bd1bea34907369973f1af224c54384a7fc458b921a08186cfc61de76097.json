{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/Marquee.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\n\n/* eslint-disable jsx-a11y/no-distracting-elements */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Marquee = () => {\n  _s();\n  useEffect(() => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const myCity = 'Guildford';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(myCity)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Error fetching marquee data\");\n      }\n      return response.json();\n    }).then(data => {\n      const cityInfo = document.getElementById('cityinfo');\n      if (data && data.currentConditions) {\n        let todayCondition = ` Now: ${data.currentConditions.temp}℃ ${data.currentConditions.conditions}`;\n        let tmrCondition = \"\";\n        if (data.days && data.days.length > 1) {\n          tmrCondition = ` Tomorrow: ${data.days[1].temp}℃ ${data.days[1].conditions}`;\n        }\n        cityInfo.innerHTML = myCity.concat(todayCondition, '; ', tmrCondition);\n      } else {\n        cityInfo.innerHTML = \"Error loading marquee data.\";\n      }\n    }).catch(error => {\n      const cityInfo = document.getElementById('cityinfo');\n      cityInfo.innerHTML = \"Error loading marquee data.\";\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero is-info\",\n    children: /*#__PURE__*/_jsxDEV(\"marquee\", {\n      behavior: \"scroll\",\n      direction: \"left\",\n      id: \"cityinfo\",\n      children: \"Guildford Now: 11.1\\u2103 Clear; Tomorrow: 5.3\\u2103 Rain, Partially cloudy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Marquee, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Marquee;\nexport default Marquee;\nvar _c;\n$RefreshReg$(_c, \"Marquee\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Marquee","_s","apikey","myCity","apiUrl","encodeURIComponent","fetch","then","response","ok","Error","json","data","cityInfo","document","getElementById","currentConditions","todayCondition","temp","conditions","tmrCondition","days","length","innerHTML","concat","catch","error","className","children","behavior","direction","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/Marquee.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\n/* eslint-disable jsx-a11y/no-distracting-elements */\nconst Marquee = () => {\n  useEffect(() => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const myCity = 'Guildford';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(myCity)}?unitGroup=metric&key=${apikey}&contentType=json`;\n\n    fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Error fetching marquee data\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        const cityInfo = document.getElementById('cityinfo');\n        if (data && data.currentConditions) {\n          let todayCondition = ` Now: ${data.currentConditions.temp}℃ ${data.currentConditions.conditions}`;\n          let tmrCondition = \"\";\n          if (data.days && data.days.length > 1) {\n            tmrCondition = ` Tomorrow: ${data.days[1].temp}℃ ${data.days[1].conditions}`;\n          }\n          cityInfo.innerHTML = myCity.concat(todayCondition, '; ', tmrCondition);\n        } else {\n          cityInfo.innerHTML = \"Error loading marquee data.\";\n        }\n      })\n      .catch(error => {\n        const cityInfo = document.getElementById('cityinfo');\n        cityInfo.innerHTML = \"Error loading marquee data.\";\n      });\n  }, []);\n\n  return (\n    <section className=\"hero is-info\">\n      <marquee behavior=\"scroll\" direction=\"left\" id=\"cityinfo\">\n        Guildford Now: 11.1℃ Clear; Tomorrow: 5.3℃ Rain, Partially cloudy\n      </marquee>\n    </section>\n  );\n};\n\nexport default Marquee;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpBJ,SAAS,CAAC,MAAM;IACd,MAAMK,MAAM,GAAG,2BAA2B;IAC1C,MAAMC,MAAM,GAAG,WAAW;IAC1B,MAAMC,MAAM,GAAG,uFAAuFC,kBAAkB,CAACF,MAAM,CAAC,yBAAyBD,MAAM,mBAAmB;IAElLI,KAAK,CAACF,MAAM,CAAC,CACVG,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MACpD,IAAIH,IAAI,IAAIA,IAAI,CAACI,iBAAiB,EAAE;QAClC,IAAIC,cAAc,GAAG,SAASL,IAAI,CAACI,iBAAiB,CAACE,IAAI,KAAKN,IAAI,CAACI,iBAAiB,CAACG,UAAU,EAAE;QACjG,IAAIC,YAAY,GAAG,EAAE;QACrB,IAAIR,IAAI,CAACS,IAAI,IAAIT,IAAI,CAACS,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACrCF,YAAY,GAAG,cAAcR,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,CAACH,IAAI,KAAKN,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,CAACF,UAAU,EAAE;QAC9E;QACAN,QAAQ,CAACU,SAAS,GAAGpB,MAAM,CAACqB,MAAM,CAACP,cAAc,EAAE,IAAI,EAAEG,YAAY,CAAC;MACxE,CAAC,MAAM;QACLP,QAAQ,CAACU,SAAS,GAAG,6BAA6B;MACpD;IACF,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACd,MAAMb,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MACpDF,QAAQ,CAACU,SAAS,GAAG,6BAA6B;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAS4B,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC/B7B,OAAA;MAAS8B,QAAQ,EAAC,QAAQ;MAACC,SAAS,EAAC,MAAM;MAACC,EAAE,EAAC,UAAU;MAAAH,QAAA,EAAC;IAE1D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAAClC,EAAA,CAvCID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}