{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CityCard from './CityCard';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityList = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  // Fetch cities from the backend API\n  useEffect(() => {\n    fetch('/api/cities/').then(res => res.json()).then(data => setCities(data)).catch(err => setNotification({\n      type: 'danger',\n      message: 'Error loading cities.'\n    }));\n  }, []);\n\n  // Remove a city from the state when deleted\n  const handleDelete = (cityId, cityName) => {\n    fetch(`/ajax/cities/${cityId}/delete/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.status === 'success') {\n        setCities(cities.filter(city => city.id !== cityId));\n        setNotification({\n          type: 'success',\n          message: `Successfully deleted '${cityName}'`\n        });\n      } else {\n        setNotification({\n          type: 'danger',\n          message: data.error || 'Error deleting city!'\n        });\n      }\n    }).catch(err => setNotification({\n      type: 'danger',\n      message: 'Network error deleting city.'\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      message: notification.message,\n      onClose: () => setNotification(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cityList\",\n      children: cities.length > 0 ? cities.map(city => /*#__PURE__*/_jsxDEV(CityCard, {\n        city: city,\n        onDelete: handleDelete\n      }, city.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"has-text-centered\",\n        children: \"No cities added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CityList, \"msS1Bymfg26tI8wR1uGbQRnMHDo=\");\n_c = CityList;\nexport default CityList;\nvar _c;\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"names":["React","useEffect","useState","CityCard","Notification","jsxDEV","_jsxDEV","CityList","_s","cities","setCities","notification","setNotification","fetch","then","res","json","data","catch","err","type","message","handleDelete","cityId","cityName","method","headers","status","filter","city","id","error","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onDelete","className","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CityCard from './CityCard';\nimport Notification from './Notification';\n\nconst CityList = () => {\n  const [cities, setCities] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  // Fetch cities from the backend API\n  useEffect(() => {\n    fetch('/api/cities/')\n      .then(res => res.json())\n      .then(data => setCities(data))\n      .catch(err => setNotification({ type: 'danger', message: 'Error loading cities.' }));\n  }, []);\n\n  // Remove a city from the state when deleted\n  const handleDelete = (cityId, cityName) => {\n    fetch(`/ajax/cities/${cityId}/delete/`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 'success') {\n          setCities(cities.filter(city => city.id !== cityId));\n          setNotification({ type: 'success', message: `Successfully deleted '${cityName}'` });\n        } else {\n          setNotification({ type: 'danger', message: data.error || 'Error deleting city!' });\n        }\n      })\n      .catch(err => setNotification({ type: 'danger', message: 'Network error deleting city.' }));\n  };\n\n  return (\n    <div>\n      {notification && (\n        <Notification type={notification.type} message={notification.message} onClose={() => setNotification(null)} />\n      )}\n      <div id=\"cityList\">\n        {cities.length > 0 ? (\n          cities.map(city => (\n            <CityCard key={city.id} city={city} onDelete={handleDelete} />\n          ))\n        ) : (\n          <p className=\"has-text-centered\">No cities added yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CityList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,GAAG,IAAIP,eAAe,CAAC;MAAEQ,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAwB,CAAC,CAAC,CAAC;EACxF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACzCX,KAAK,CAAC,gBAAgBU,MAAM,UAAU,EAAE;MACtCE,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACCZ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACU,MAAM,KAAK,SAAS,EAAE;QAC7BjB,SAAS,CAACD,MAAM,CAACmB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAAC,CAAC;QACpDX,eAAe,CAAC;UAAEQ,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAE,yBAAyBG,QAAQ;QAAI,CAAC,CAAC;MACrF,CAAC,MAAM;QACLZ,eAAe,CAAC;UAAEQ,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAEJ,IAAI,CAACc,KAAK,IAAI;QAAuB,CAAC,CAAC;MACpF;IACF,CAAC,CAAC,CACDb,KAAK,CAACC,GAAG,IAAIP,eAAe,CAAC;MAAEQ,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAA+B,CAAC,CAAC,CAAC;EAC/F,CAAC;EAED,oBACEf,OAAA;IAAA0B,QAAA,GACGrB,YAAY,iBACXL,OAAA,CAACF,YAAY;MAACgB,IAAI,EAAET,YAAY,CAACS,IAAK;MAACC,OAAO,EAAEV,YAAY,CAACU,OAAQ;MAACY,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAAC,IAAI;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9G,eACD/B,OAAA;MAAKwB,EAAE,EAAC,UAAU;MAAAE,QAAA,EACfvB,MAAM,CAAC6B,MAAM,GAAG,CAAC,GAChB7B,MAAM,CAAC8B,GAAG,CAACV,IAAI,iBACbvB,OAAA,CAACH,QAAQ;QAAe0B,IAAI,EAAEA,IAAK;QAACW,QAAQ,EAAElB;MAAa,GAA5CO,IAAI,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC9D,CAAC,gBAEF/B,OAAA;QAAGmC,SAAS,EAAC,mBAAmB;QAAAT,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA9CID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}