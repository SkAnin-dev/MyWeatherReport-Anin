{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityCard = ({\n  city,\n  onDelete\n}) => {\n  _s();\n  const [weather, setWeather] = useState({\n    temp: '[??]',\n    cond: 'No information',\n    icon: '/media/none.png'\n  });\n  useEffect(() => {\n    // Fetch weather data for this city from Visual Crossing API\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    fetch(apiUrl).then(res => {\n      if (!res.ok) throw new Error(\"City not found\");\n      return res.json();\n    }).then(data => {\n      const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : {});\n      if (currentData && currentData.temp && currentData.conditions) {\n        // Simple daytime logic (can be extended to include sunrise/sunset checks)\n        const now = Date.now() / 1000;\n        let iconFile = '/media/none.png';\n        const condition = currentData.conditions.toLowerCase();\n        if (condition.includes(\"clear\")) {\n          iconFile = \"/media/clear-day.png\";\n        } else if (condition.includes(\"rain\")) {\n          iconFile = \"/media/rain.png\";\n        } // Add additional conditions as needed...\n\n        setWeather({\n          temp: `${currentData.temp}° C`,\n          cond: currentData.conditions,\n          icon: iconFile\n        });\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [city.name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box city-box\",\n    \"data-city-id\": city.id,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"media\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-left\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"image is-64x64\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              style: {\n                fontWeight: 'normal'\n              },\n              children: city.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"subtitle\",\n              id: `temp-${city.id}`,\n              children: weather.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"condition\",\n              id: `cond-${city.id}`,\n              children: weather.cond\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => onDelete(city.id, city.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CityCard, \"i/1ntvj7OonuE0aQIr/YQ6HdiM4=\");\n_c = CityCard;\nexport default CityCard;\nvar _c;\n$RefreshReg$(_c, \"CityCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CityCard","city","onDelete","_s","weather","setWeather","temp","cond","icon","apikey","apiUrl","encodeURIComponent","name","fetch","then","res","ok","Error","json","data","currentData","currentConditions","days","length","conditions","now","Date","iconFile","condition","toLowerCase","includes","catch","err","console","error","className","id","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CityCard = ({ city, onDelete }) => {\n  const [weather, setWeather] = useState({ temp: '[??]', cond: 'No information', icon: '/media/none.png' });\n\n  useEffect(() => {\n    // Fetch weather data for this city from Visual Crossing API\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    \n    fetch(apiUrl)\n      .then(res => {\n        if (!res.ok) throw new Error(\"City not found\");\n        return res.json();\n      })\n      .then(data => {\n        const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : {});\n        if (currentData && currentData.temp && currentData.conditions) {\n          // Simple daytime logic (can be extended to include sunrise/sunset checks)\n          const now = Date.now() / 1000;\n          let iconFile = '/media/none.png';\n          const condition = currentData.conditions.toLowerCase();\n          if (condition.includes(\"clear\")) {\n            iconFile = \"/media/clear-day.png\";\n          } else if (condition.includes(\"rain\")) {\n            iconFile = \"/media/rain.png\";\n          } // Add additional conditions as needed...\n          \n          setWeather({ temp: `${currentData.temp}° C`, cond: currentData.conditions, icon: iconFile });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [city.name]);\n\n  return (\n    <div className=\"box city-box\" data-city-id={city.id}>\n      <article className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-64x64\">\n            <img src={weather.icon} alt=\"Weather Icon\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <span className=\"title\" style={{ fontWeight: 'normal' }}>{city.name}</span>\n              <br />\n              <span className=\"subtitle\" id={`temp-${city.id}`}>{weather.temp}</span>\n              <br />\n              <span className=\"condition\" id={`cond-${city.id}`}>{weather.cond}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"media-right\">\n          <button className=\"delete\" onClick={() => onDelete(city.id, city.name)}></button>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default CityCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}