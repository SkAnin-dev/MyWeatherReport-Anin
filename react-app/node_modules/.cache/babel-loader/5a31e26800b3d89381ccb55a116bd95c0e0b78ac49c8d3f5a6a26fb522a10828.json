{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/Breadcrumbs.js\";\nimport React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Breadcrumbs Component\n *\n * @param {Array} links - An array of objects representing the breadcrumb path.\n *   Each object has:\n *   - {string} label - The display text for the breadcrumb\n *   - {string} to    - The route path for the breadcrumb (if not the last item)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Breadcrumbs({\n  links = []\n}) {\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    children: links.map((link, index) => {\n      // Determine if this is the last breadcrumb\n      const isLast = index === links.length - 1;\n      return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        // Only make the last breadcrumb \"active\" and non-clickable\n        active: isLast\n        // For all but the last breadcrumb, render a <Link>\n        ,\n        linkAs: isLast ? \"span\" : Link,\n        linkProps: isLast ? {} : {\n          to: link.to\n        },\n        children: link.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","Breadcrumb","Link","jsxDEV","_jsxDEV","Breadcrumbs","links","children","map","link","index","isLast","length","Item","active","linkAs","linkProps","to","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/Breadcrumbs.js"],"sourcesContent":["import React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Breadcrumbs Component\n *\n * @param {Array} links - An array of objects representing the breadcrumb path.\n *   Each object has:\n *   - {string} label - The display text for the breadcrumb\n *   - {string} to    - The route path for the breadcrumb (if not the last item)\n */\nfunction Breadcrumbs({ links = [] }) {\n  return (\n    <Breadcrumb>\n      {links.map((link, index) => {\n        // Determine if this is the last breadcrumb\n        const isLast = index === links.length - 1;\n        return (\n          <Breadcrumb.Item\n            key={index}\n            // Only make the last breadcrumb \"active\" and non-clickable\n            active={isLast}\n            // For all but the last breadcrumb, render a <Link>\n            linkAs={isLast ? \"span\" : Link}\n            linkProps={isLast ? {} : { to: link.to }}\n          >\n            {link.label}\n          </Breadcrumb.Item>\n        );\n      })}\n    </Breadcrumb>\n  );\n}\n\nexport default Breadcrumbs;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,SAASC,WAAWA,CAAC;EAAEC,KAAK,GAAG;AAAG,CAAC,EAAE;EACnC,oBACEF,OAAA,CAACH,UAAU;IAAAM,QAAA,EACRD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B;MACA,MAAMC,MAAM,GAAGD,KAAK,KAAKJ,KAAK,CAACM,MAAM,GAAG,CAAC;MACzC,oBACER,OAAA,CAACH,UAAU,CAACY,IAAI;QAEd;QACAC,MAAM,EAAEH;QACR;QAAA;QACAI,MAAM,EAAEJ,MAAM,GAAG,MAAM,GAAGT,IAAK;QAC/Bc,SAAS,EAAEL,MAAM,GAAG,CAAC,CAAC,GAAG;UAAEM,EAAE,EAAER,IAAI,CAACQ;QAAG,CAAE;QAAAV,QAAA,EAExCE,IAAI,CAACS;MAAK,GAPNR,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQK,CAAC;IAEtB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB;AAACC,EAAA,GArBQlB,WAAW;AAuBpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}