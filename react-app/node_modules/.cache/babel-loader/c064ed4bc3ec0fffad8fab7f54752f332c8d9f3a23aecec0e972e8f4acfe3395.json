{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityList.js\";\nimport React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Breadcrumbs renders a navigation trail based on an array of link objects.\n *\n * @param {Object} props - Component props.\n * @param {Array} props.links - Array of breadcrumb objects.\n *   Each object should have:\n *     - label: {string} The text to display.\n *     - to: {string} The path to link to (omitted for the last item).\n * @returns {JSX.Element} The rendered breadcrumb navigation.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = ({\n  links = []\n}) => /*#__PURE__*/_jsxDEV(Breadcrumb, {\n  children: links.map((link, index) => {\n    const isLast = index === links.length - 1;\n    return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      active: isLast,\n      linkAs: isLast ? \"span\" : Link,\n      linkProps: isLast ? {} : {\n        to: link.to\n      },\n      children: link.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","Breadcrumb","Link","jsxDEV","_jsxDEV","Breadcrumbs","links","children","map","link","index","isLast","length","Item","active","linkAs","linkProps","to","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/CityList.js"],"sourcesContent":["import React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Breadcrumbs renders a navigation trail based on an array of link objects.\n *\n * @param {Object} props - Component props.\n * @param {Array} props.links - Array of breadcrumb objects.\n *   Each object should have:\n *     - label: {string} The text to display.\n *     - to: {string} The path to link to (omitted for the last item).\n * @returns {JSX.Element} The rendered breadcrumb navigation.\n */\nconst Breadcrumbs = ({ links = [] }) => (\n  <Breadcrumb>\n    {links.map((link, index) => {\n      const isLast = index === links.length - 1;\n      return (\n        <Breadcrumb.Item\n          key={index}\n          active={isLast}\n          linkAs={isLast ? \"span\" : Link}\n          linkProps={isLast ? {} : { to: link.to }}\n        >\n          {link.label}\n        </Breadcrumb.Item>\n      );\n    })}\n  </Breadcrumb>\n);\n\nexport default Breadcrumbs;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK,GAAG;AAAG,CAAC,kBACjCF,OAAA,CAACH,UAAU;EAAAM,QAAA,EACRD,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC1B,MAAMC,MAAM,GAAGD,KAAK,KAAKJ,KAAK,CAACM,MAAM,GAAG,CAAC;IACzC,oBACER,OAAA,CAACH,UAAU,CAACY,IAAI;MAEdC,MAAM,EAAEH,MAAO;MACfI,MAAM,EAAEJ,MAAM,GAAG,MAAM,GAAGT,IAAK;MAC/Bc,SAAS,EAAEL,MAAM,GAAG,CAAC,CAAC,GAAG;QAAEM,EAAE,EAAER,IAAI,CAACQ;MAAG,CAAE;MAAAV,QAAA,EAExCE,IAAI,CAACS;IAAK,GALNR,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMK,CAAC;EAEtB,CAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACb;AAACC,EAAA,GAhBIlB,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}