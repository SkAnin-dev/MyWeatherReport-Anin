{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/pages/WeatherPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Container, ListGroup } from \"react-bootstrap\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport ErrorAlert from \"../components/ErrorAlert\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n// Example constants for the weather API.\n// Replace these with your actual API key and desired base URL if needed.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_API_BASE = \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\nconst WEATHER_API_KEY = \"YOUR_API_KEY_HERE\"; // Replace with your actual API key\n\nfunction WeatherPage() {\n  _s();\n  // Retrieve the city parameter from the URL (e.g., /weather/:city)\n  const {\n    city\n  } = useParams();\n\n  // Fetch weather data for the given city using React Query.\n  const {\n    data: weatherData,\n    isLoading,\n    isError,\n    error\n  } = useQuery({\n    queryKey: [\"weather\", city],\n    queryFn: async () => {\n      // Construct the API URL with parameters\n      const url = `${WEATHER_API_BASE}${encodeURIComponent(city)}?unitGroup=metric&key=${WEATHER_API_KEY}&contentType=json`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch weather data for '${city}'`);\n      }\n      return response.json();\n    }\n  });\n\n  // Display a loading spinner while data is being fetched.\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display an error alert if fetching the data fails.\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Prepare breadcrumb links for navigation.\n  const breadcrumbLinks = [{\n    label: \"Home\",\n    to: \"/\"\n  }, {\n    label: \"Weather\",\n    to: \"/weather\"\n  }, {\n    label: city,\n    to: `/weather/${city}`\n  }];\n\n  // Extract current conditions and forecast days from the weather data.\n  const {\n    currentConditions,\n    days = []\n  } = weatherData || {};\n  const {\n    temp,\n    conditions\n  } = currentConditions || {};\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      links: breadcrumbLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Weather in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), currentConditions ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temperature:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \" \", temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Conditions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", conditions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No current weather data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), days.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: days.map(day => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [day.datetime, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), \" \", day.conditions, \" with a temperature of \", day.temp, \"\\xB0C.\"]\n      }, day.datetime, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No forecast data available for this location.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherPage, \"UOk6Fbq/8LFQmrTPGW1HERIyDM4=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = WeatherPage;\nexport default WeatherPage;\nvar _c;\n$RefreshReg$(_c, \"WeatherPage\");","map":{"version":3,"names":["React","useParams","Link","Container","ListGroup","LoadingSpinner","ErrorAlert","Breadcrumbs","useQuery","jsxDEV","_jsxDEV","WEATHER_API_BASE","WEATHER_API_KEY","WeatherPage","_s","city","data","weatherData","isLoading","isError","error","queryKey","queryFn","url","encodeURIComponent","response","fetch","ok","Error","json","fileName","_jsxFileName","lineNumber","columnNumber","message","breadcrumbLinks","label","to","currentConditions","days","temp","conditions","children","links","style","marginBottom","length","map","day","Item","datetime","marginTop","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/pages/WeatherPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Container, ListGroup } from \"react-bootstrap\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport ErrorAlert from \"../components/ErrorAlert\";\nimport Breadcrumbs from \"../components/Breadcrumbs\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n// Example constants for the weather API.\n// Replace these with your actual API key and desired base URL if needed.\nconst WEATHER_API_BASE = \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\";\nconst WEATHER_API_KEY = \"YOUR_API_KEY_HERE\"; // Replace with your actual API key\n\nfunction WeatherPage() {\n  // Retrieve the city parameter from the URL (e.g., /weather/:city)\n  const { city } = useParams();\n\n  // Fetch weather data for the given city using React Query.\n  const {\n    data: weatherData,\n    isLoading,\n    isError,\n    error,\n  } = useQuery({\n    queryKey: [\"weather\", city],\n    queryFn: async () => {\n      // Construct the API URL with parameters\n      const url = `${WEATHER_API_BASE}${encodeURIComponent(city)}?unitGroup=metric&key=${WEATHER_API_KEY}&contentType=json`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch weather data for '${city}'`);\n      }\n      return response.json();\n    },\n  });\n\n  // Display a loading spinner while data is being fetched.\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n\n  // Display an error alert if fetching the data fails.\n  if (isError) {\n    return <ErrorAlert message={error?.message} />;\n  }\n\n  // Prepare breadcrumb links for navigation.\n  const breadcrumbLinks = [\n    { label: \"Home\", to: \"/\" },\n    { label: \"Weather\", to: \"/weather\" },\n    { label: city, to: `/weather/${city}` },\n  ];\n\n  // Extract current conditions and forecast days from the weather data.\n  const { currentConditions, days = [] } = weatherData || {};\n  const { temp, conditions } = currentConditions || {};\n\n  return (\n    <Container>\n      {/* Breadcrumb navigation */}\n      <Breadcrumbs links={breadcrumbLinks} />\n\n      <h1>Weather in {city}</h1>\n\n      {/* Display current weather conditions */}\n      {currentConditions ? (\n        <div style={{ marginBottom: \"20px\" }}>\n          <h2>Current Conditions</h2>\n          <p>\n            <strong>Temperature:</strong> {temp}Â°C\n          </p>\n          <p>\n            <strong>Conditions:</strong> {conditions}\n          </p>\n        </div>\n      ) : (\n        <p>No current weather data available.</p>\n      )}\n\n      {/* Display weather forecast */}\n      <h2>Forecast</h2>\n      {days.length > 0 ? (\n        <ListGroup>\n          {days.map((day) => (\n            <ListGroup.Item key={day.datetime}>\n              <strong>{day.datetime}:</strong> {day.conditions} with a temperature of {day.temp}Â°C.\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      ) : (\n        <p>No forecast data available for this location.</p>\n      )}\n\n      {/* Back to Home link */}\n      <div style={{ marginTop: \"20px\" }}>\n        <Link to=\"/\">Back to Home</Link>\n      </div>\n    </Container>\n  );\n}\n\nexport default WeatherPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}