{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddCityForm=_ref=>{let{cities,onCityAdded,showNotification}=_ref;const[cityName,setCityName]=useState('');// Helper: Get CSRF token from cookies.\nconst getCSRFToken=()=>{const match=document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));return match?match[2]:'';};// Validate city via Visual Crossing API and log the response.\nconst validateCity=name=>{const apikey='BP8GPRYV53UQ56SHJR5EFCJ77';const apiUrl=`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(name)}?unitGroup=metric&key=${apikey}&contentType=json`;return fetch(apiUrl).then(response=>{if(!response.ok)throw new Error(\"Invalid city\");return response.json();}).then(data=>{console.log(\"Validation data for\",name,data);// Log API response for debugging\nif(data.days&&data.days.length>0)return true;else throw new Error(\"Invalid city\");});};const handleSubmit=e=>{e.preventDefault();const trimmedName=cityName.trim();if(!trimmedName)return;// Duplicate check.\nif(cities.some(city=>city.name.toLowerCase()===trimmedName.toLowerCase())){showNotification({type:'danger',message:`City '${trimmedName}' already exists in the list!`});return;}// Validate the city.\nvalidateCity(trimmedName).then(()=>{return fetch('/ajax/cities/add/',{method:'POST',credentials:'include',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()},body:JSON.stringify({name:trimmedName})});}).then(res=>res.json()).then(data=>{if(data.status==='success'){showNotification({type:'success',message:\"City added successfully!\"});onCityAdded(data.city);setCityName('');}else{showNotification({type:'danger',message:`City '${trimmedName}' already exists in the list!`});}}).catch(err=>{console.error('Validation or network error:',err);showNotification({type:'danger',message:`City '${trimmedName}' does not exist in the world!`});});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"form\",{id:\"addCityForm\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"field has-addons\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"control is-expanded\",children:/*#__PURE__*/_jsx(\"input\",{className:\"input\",name:\"name\",type:\"text\",placeholder:\"City Name\",required:true,value:cityName,onChange:e=>setCityName(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"control\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button is-info\",type:\"submit\",children:\"Add City\"})})]})})});};export default AddCityForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddCityForm","_ref","cities","onCityAdded","showNotification","cityName","setCityName","getCSRFToken","match","document","cookie","RegExp","validateCity","name","apikey","apiUrl","encodeURIComponent","fetch","then","response","ok","Error","json","data","console","log","days","length","handleSubmit","e","preventDefault","trimmedName","trim","some","city","toLowerCase","type","message","method","credentials","headers","body","JSON","stringify","res","status","catch","err","error","children","id","onSubmit","className","placeholder","required","value","onChange","target"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AddCityForm = ({ cities, onCityAdded, showNotification }) => {\n  const [cityName, setCityName] = useState('');\n\n  // Helper: Get CSRF token from cookies.\n  const getCSRFToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));\n    return match ? match[2] : '';\n  };\n\n  // Validate city via Visual Crossing API and log the response.\n  const validateCity = (name) => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    return fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) throw new Error(\"Invalid city\");\n        return response.json();\n      })\n      .then(data => {\n        console.log(\"Validation data for\", name, data); // Log API response for debugging\n        if (data.days && data.days.length > 0) return true;\n        else throw new Error(\"Invalid city\");\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const trimmedName = cityName.trim();\n    if (!trimmedName) return;\n\n    // Duplicate check.\n    if (cities.some(city => city.name.toLowerCase() === trimmedName.toLowerCase())) {\n      showNotification({ type: 'danger', message: `City '${trimmedName}' already exists in the list!` });\n      return;\n    }\n\n    // Validate the city.\n    validateCity(trimmedName)\n      .then(() => {\n        return fetch('/ajax/cities/add/', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': getCSRFToken()\n          },\n          body: JSON.stringify({ name: trimmedName })\n        });\n      })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 'success') {\n          showNotification({ type: 'success', message: \"City added successfully!\" });\n          onCityAdded(data.city);\n          setCityName('');\n        } else {\n          showNotification({ type: 'danger', message: `City '${trimmedName}' already exists in the list!` });\n        }\n      })\n      .catch(err => {\n        console.error('Validation or network error:', err);\n        showNotification({ type: 'danger', message: `City '${trimmedName}' does not exist in the world!` });\n      });\n  };\n\n  return (\n    <div>\n      <form id=\"addCityForm\" onSubmit={handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <input\n              className=\"input\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"City Name\"\n              required\n              value={cityName}\n              onChange={e => setCityName(e.target.value)}\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info\" type=\"submit\">Add City</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddCityForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}