{"ast":null,"code":"import React,{useEffect,useState}from'react';import{AJAX}from'../constant';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CityCard=_ref=>{let{city,onDelete,showNotification}=_ref;const[weather,setWeather]=useState({temp:\"[??]° C\",cond:\"No information\",icon:\"/media/none.png\"});const getLocalTime=()=>new Date();const parseSunTime=timeStr=>timeStr?new Date(timeStr):null;useEffect(()=>{const fetchWeatherData=()=>{const apikey='83MPJTJKXE4NAFC8UB3TK53YA';const apiUrl=`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;fetch(apiUrl).then(response=>{if(!response.ok)throw new Error(\"Weather API error\");return response.json();}).then(data=>{const currentData=data.currentConditions||(data.days&&data.days.length>0?data.days[0]:null);if(currentData&&typeof currentData.temp!=='undefined'&&currentData.conditions){let sunriseEpoch,sunsetEpoch;if(currentData.sunriseEpoch&&currentData.sunsetEpoch){sunriseEpoch=currentData.sunriseEpoch;sunsetEpoch=currentData.sunsetEpoch;}else if(data.days&&data.days.length>0){sunriseEpoch=data.days[0].sunriseEpoch;sunsetEpoch=data.days[0].sunsetEpoch;}let dayTime=true;if(sunriseEpoch&&sunsetEpoch){const nowEpoch=Date.now()/1000;dayTime=nowEpoch>=sunriseEpoch&&nowEpoch<sunsetEpoch;}else{const sunrise=currentData.sunrise?parseSunTime(currentData.sunrise):null;const sunset=currentData.sunset?parseSunTime(currentData.sunset):null;dayTime=sunrise&&sunset?getLocalTime()>=sunrise&&getLocalTime()<sunset:true;}let iconFile=\"none.png\";const condition=currentData.conditions.toLowerCase();if(condition.includes(\"thunder\")){if(condition.includes(\"showers\")){iconFile=dayTime?\"thunder-showers-day.png\":\"thunder-showers-night.png\";}else if(condition.includes(\"rain\")){iconFile=\"thunder-rain.png\";}else{iconFile=\"thunder.png\";}}else if(condition.includes(\"rain\")&&condition.includes(\"snow\")){iconFile=\"rain-snow.png\";}else if(condition.includes(\"rain\")&&condition.includes(\"showers\")){iconFile=dayTime?\"showers-day.png\":\"showers-night.png\";}else if(condition.includes(\"rain\")){iconFile=\"rain.png\";}else if(condition.includes(\"snow\")&&condition.includes(\"showers\")){iconFile=dayTime?\"snow-showers-day.png\":\"snow-showers-night.png\";}else if(condition.includes(\"snow\")){iconFile=\"snow.png\";}else if(condition.includes(\"sleet\")){iconFile=\"sleet.png\";}else if(condition.includes(\"fog\")){iconFile=\"fog.png\";}else if(condition.includes(\"hail\")){iconFile=\"hail.png\";}else if(condition.includes(\"wind\")){iconFile=\"wind.png\";}else if(condition.includes(\"clear\")){iconFile=dayTime?\"clear-day.png\":\"clear-night.png\";}else if(condition.includes(\"partly\")&&condition.includes(\"cloudy\")){iconFile=dayTime?\"partly-cloudy-day.png\":\"partly-cloudy-night.png\";}else if(condition.includes(\"overcast\")){iconFile=\"cloudy.png\";}else if(condition.includes(\"cloudy\")){if(currentData.cloudcover!==undefined&&currentData.cloudcover<80){iconFile=dayTime?\"partly-cloudy-day.png\":\"partly-cloudy-night.png\";}else{iconFile=\"cloudy.png\";}}setWeather({temp:`${currentData.temp}° C`,cond:currentData.conditions,icon:`/media/${iconFile}`});}else{console.error(\"Incomplete weather data for\",city.name);setWeather({temp:\"[??]° C\",cond:\"No information\",icon:\"/media/none.png\"});}}).catch(err=>{console.error(\"Error fetching weather for\",city.name,err);setWeather({temp:\"[??]° C\",cond:\"No information\",icon:\"/media/none.png\"});});};fetchWeatherData();},[city.name]);// Always send a DELETE request for any city, including default cities.\nconst handleDelete=()=>{fetch(`${AJAX}cities/${city.id}/delete/`,{method:'DELETE',credentials:'include'}).then(async res=>{let data={};try{data=await res.json();}catch(e){if(res.ok)data.success=true;}if(res.ok&&(data.status==='success'||data.success)){onDelete(city.id);showNotification({type:'success',message:`Successfully deleted '${city.name}'`});}else{const errMsg=data.message||\"Error deleting city!\";console.error(\"Error deleting city:\",errMsg);showNotification({type:'danger',message:errMsg});}}).catch(err=>{console.error(\"Network error deleting city\",err);showNotification({type:'danger',message:\"Network error or server not reachable!\"});});};return/*#__PURE__*/_jsx(\"div\",{className:\"box city-box\",\"data-city-id\":city.id,children:/*#__PURE__*/_jsxs(\"article\",{className:\"media\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"media-left\",children:/*#__PURE__*/_jsx(\"figure\",{className:\"image is-64x64\",children:/*#__PURE__*/_jsx(\"img\",{src:weather.icon,alt:\"Weather Icon\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"media-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",style:{fontWeight:'normal'},children:city.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"subtitle\",id:`temp-${city.id}`,children:weather.temp}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"condition\",id:`cond-${city.id}`,children:weather.cond})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"media-right\",children:/*#__PURE__*/_jsx(\"button\",{className:\"delete\",onClick:handleDelete})})]})});};export default CityCard;","map":{"version":3,"names":["React","useEffect","useState","AJAX","jsx","_jsx","jsxs","_jsxs","CityCard","_ref","city","onDelete","showNotification","weather","setWeather","temp","cond","icon","getLocalTime","Date","parseSunTime","timeStr","fetchWeatherData","apikey","apiUrl","encodeURIComponent","name","fetch","then","response","ok","Error","json","data","currentData","currentConditions","days","length","conditions","sunriseEpoch","sunsetEpoch","dayTime","nowEpoch","now","sunrise","sunset","iconFile","condition","toLowerCase","includes","cloudcover","undefined","console","error","catch","err","handleDelete","id","method","credentials","res","e","success","status","type","message","errMsg","className","children","src","alt","style","fontWeight","onClick"],"sources":["C:/Users/skahm/Downloads/MyWeatherReport/MyWeatherReport/react-app/src/components/CityCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AJAX } from '../constant';\n\nconst CityCard = ({ city, onDelete, showNotification }) => {\n  const [weather, setWeather] = useState({\n    temp: \"[??]° C\",\n    cond: \"No information\",\n    icon: \"/media/none.png\"\n  });\n\n  const getLocalTime = () => new Date();\n  const parseSunTime = (timeStr) => timeStr ? new Date(timeStr) : null;\n\n  useEffect(() => {\n    const fetchWeatherData = () => {\n      const apikey = '83MPJTJKXE4NAFC8UB3TK53YA';\n      const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(city.name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n      \n      fetch(apiUrl)\n        .then(response => {\n          if (!response.ok) throw new Error(\"Weather API error\");\n          return response.json();\n        })\n        .then(data => {\n          const currentData = data.currentConditions || (data.days && data.days.length > 0 ? data.days[0] : null);\n          if (currentData && typeof currentData.temp !== 'undefined' && currentData.conditions) {\n            let sunriseEpoch, sunsetEpoch;\n            if (currentData.sunriseEpoch && currentData.sunsetEpoch) {\n              sunriseEpoch = currentData.sunriseEpoch;\n              sunsetEpoch = currentData.sunsetEpoch;\n            } else if (data.days && data.days.length > 0) {\n              sunriseEpoch = data.days[0].sunriseEpoch;\n              sunsetEpoch = data.days[0].sunsetEpoch;\n            }\n            let dayTime = true;\n            if (sunriseEpoch && sunsetEpoch) {\n              const nowEpoch = Date.now() / 1000;\n              dayTime = (nowEpoch >= sunriseEpoch && nowEpoch < sunsetEpoch);\n            } else {\n              const sunrise = currentData.sunrise ? parseSunTime(currentData.sunrise) : null;\n              const sunset = currentData.sunset ? parseSunTime(currentData.sunset) : null;\n              dayTime = (sunrise && sunset) ? (getLocalTime() >= sunrise && getLocalTime() < sunset) : true;\n            }\n            let iconFile = \"none.png\";\n            const condition = currentData.conditions.toLowerCase();\n            if (condition.includes(\"thunder\")) {\n              if (condition.includes(\"showers\")) {\n                iconFile = dayTime ? \"thunder-showers-day.png\" : \"thunder-showers-night.png\";\n              } else if (condition.includes(\"rain\")) {\n                iconFile = \"thunder-rain.png\";\n              } else {\n                iconFile = \"thunder.png\";\n              }\n            } else if (condition.includes(\"rain\") && condition.includes(\"snow\")) {\n              iconFile = \"rain-snow.png\";\n            } else if (condition.includes(\"rain\") && condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"showers-day.png\" : \"showers-night.png\";\n            } else if (condition.includes(\"rain\")) {\n              iconFile = \"rain.png\";\n            } else if (condition.includes(\"snow\") && condition.includes(\"showers\")) {\n              iconFile = dayTime ? \"snow-showers-day.png\" : \"snow-showers-night.png\";\n            } else if (condition.includes(\"snow\")) {\n              iconFile = \"snow.png\";\n            } else if (condition.includes(\"sleet\")) {\n              iconFile = \"sleet.png\";\n            } else if (condition.includes(\"fog\")) {\n              iconFile = \"fog.png\";\n            } else if (condition.includes(\"hail\")) {\n              iconFile = \"hail.png\";\n            } else if (condition.includes(\"wind\")) {\n              iconFile = \"wind.png\";\n            } else if (condition.includes(\"clear\")) {\n              iconFile = dayTime ? \"clear-day.png\" : \"clear-night.png\";\n            } else if (condition.includes(\"partly\") && condition.includes(\"cloudy\")) {\n              iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n            } else if (condition.includes(\"overcast\")) {\n              iconFile = \"cloudy.png\";\n            } else if (condition.includes(\"cloudy\")) {\n              if (currentData.cloudcover !== undefined && currentData.cloudcover < 80) {\n                iconFile = dayTime ? \"partly-cloudy-day.png\" : \"partly-cloudy-night.png\";\n              } else {\n                iconFile = \"cloudy.png\";\n              }\n            }\n            setWeather({\n              temp: `${currentData.temp}° C`,\n              cond: currentData.conditions,\n              icon: `/media/${iconFile}`\n            });\n          } else {\n            console.error(\"Incomplete weather data for\", city.name);\n            setWeather({\n              temp: \"[??]° C\",\n              cond: \"No information\",\n              icon: \"/media/none.png\"\n            });\n          }\n        })\n        .catch(err => {\n          console.error(\"Error fetching weather for\", city.name, err);\n          setWeather({\n            temp: \"[??]° C\",\n            cond: \"No information\",\n            icon: \"/media/none.png\"\n          });\n        });\n    };\n\n    fetchWeatherData();\n  }, [city.name]);\n\n  // Always send a DELETE request for any city, including default cities.\n  const handleDelete = () => {\n    fetch(`${AJAX}cities/${city.id}/delete/`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n      .then(async res => {\n        let data = {};\n        try {\n          data = await res.json();\n        } catch (e) {\n          if (res.ok) data.success = true;\n        }\n        if (res.ok && (data.status === 'success' || data.success)) {\n          onDelete(city.id);\n          showNotification({ type: 'success', message: `Successfully deleted '${city.name}'` });\n        } else {\n          const errMsg = data.message || \"Error deleting city!\";\n          console.error(\"Error deleting city:\", errMsg);\n          showNotification({ type: 'danger', message: errMsg });\n        }\n      })\n      .catch(err => {\n        console.error(\"Network error deleting city\", err);\n        showNotification({ type: 'danger', message: \"Network error or server not reachable!\" });\n      });\n  };\n\n  return (\n    <div className=\"box city-box\" data-city-id={city.id}>\n      <article className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-64x64\">\n            <img src={weather.icon} alt=\"Weather Icon\" />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <span className=\"title\" style={{ fontWeight: 'normal' }}>{city.name}</span><br />\n              <span className=\"subtitle\" id={`temp-${city.id}`}>{weather.temp}</span><br />\n              <span className=\"condition\" id={`cond-${city.id}`}>{weather.cond}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"media-right\">\n          <button className=\"delete\" onClick={handleDelete}></button>\n        </div>\n      </article>\n    </div>\n  );\n};\n\nexport default CityCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}