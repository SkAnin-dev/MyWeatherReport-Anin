{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCityForm = ({\n  cities,\n  onCityAdded\n}) => {\n  _s();\n  const [cityName, setCityName] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  // Helper: Get CSRF token (assumes Django sets csrftoken cookie)\n  const getCSRFToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));\n    return match ? match[2] : '';\n  };\n\n  // Validate city using Visual Crossing API.\n  const validateCity = name => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    return fetch(apiUrl).then(response => {\n      if (!response.ok) throw new Error(\"Invalid city\");\n      return response.json();\n    }).then(data => {\n      if (data.days && data.days.length > 0) return true;else throw new Error(\"Invalid city\");\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const trimmedName = cityName.trim();\n    if (!trimmedName) return;\n\n    // Duplicate check.\n    if (cities.some(city => city.name.toLowerCase() === trimmedName.toLowerCase())) {\n      setNotification({\n        type: 'danger',\n        message: `City '${trimmedName}' already exists in the list!`\n      });\n      return;\n    }\n    validateCity(trimmedName).then(() => {\n      return fetch('/ajax/cities/add/', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCSRFToken()\n        },\n        body: JSON.stringify({\n          name: trimmedName\n        })\n      });\n    }).then(res => res.json()).then(data => {\n      if (data.status === 'success') {\n        setNotification({\n          type: 'success',\n          message: \"City added successfully!\"\n        });\n        onCityAdded(data.city);\n        setCityName('');\n      } else {\n        setNotification({\n          type: 'danger',\n          message: `City '${trimmedName}' already exists in the list!`\n        });\n      }\n    }).catch(err => {\n      console.error('Validation or network error:', err);\n      setNotification({\n        type: 'danger',\n        message: `City '${trimmedName}' does not exist in the world!`\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      message: notification.message,\n      onClose: () => setNotification(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"addCityForm\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field has-addons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control is-expanded\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"City Name\",\n            required: true,\n            value: cityName,\n            onChange: e => setCityName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-info\",\n            type: \"submit\",\n            children: \"Add City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCityForm, \"Xo7yA6EksHuXTibbUZbdnwTSAOY=\");\n_c = AddCityForm;\nexport default AddCityForm;\nvar _c;\n$RefreshReg$(_c, \"AddCityForm\");","map":{"version":3,"names":["React","useState","Notification","jsxDEV","_jsxDEV","AddCityForm","cities","onCityAdded","_s","cityName","setCityName","notification","setNotification","getCSRFToken","match","document","cookie","RegExp","validateCity","name","apikey","apiUrl","encodeURIComponent","fetch","then","response","ok","Error","json","data","days","length","handleSubmit","e","preventDefault","trimmedName","trim","some","city","toLowerCase","type","message","method","credentials","headers","body","JSON","stringify","res","status","catch","err","console","error","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","className","placeholder","required","value","onChange","target","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/components/AddCityForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Notification from './Notification';\n\nconst AddCityForm = ({ cities, onCityAdded }) => {\n  const [cityName, setCityName] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  // Helper: Get CSRF token (assumes Django sets csrftoken cookie)\n  const getCSRFToken = () => {\n    const match = document.cookie.match(new RegExp('(^| )csrftoken=([^;]+)'));\n    return match ? match[2] : '';\n  };\n\n  // Validate city using Visual Crossing API.\n  const validateCity = (name) => {\n    const apikey = 'BP8GPRYV53UQ56SHJR5EFCJ77';\n    const apiUrl = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(name)}?unitGroup=metric&key=${apikey}&contentType=json`;\n    return fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) throw new Error(\"Invalid city\");\n        return response.json();\n      })\n      .then(data => {\n        if (data.days && data.days.length > 0) return true;\n        else throw new Error(\"Invalid city\");\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const trimmedName = cityName.trim();\n    if (!trimmedName) return;\n\n    // Duplicate check.\n    if (cities.some(city => city.name.toLowerCase() === trimmedName.toLowerCase())) {\n      setNotification({ type: 'danger', message: `City '${trimmedName}' already exists in the list!` });\n      return;\n    }\n\n    validateCity(trimmedName)\n      .then(() => {\n        return fetch('/ajax/cities/add/', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': getCSRFToken()\n          },\n          body: JSON.stringify({ name: trimmedName })\n        });\n      })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 'success') {\n          setNotification({ type: 'success', message: \"City added successfully!\" });\n          onCityAdded(data.city);\n          setCityName('');\n        } else {\n          setNotification({ type: 'danger', message: `City '${trimmedName}' already exists in the list!` });\n        }\n      })\n      .catch(err => {\n        console.error('Validation or network error:', err);\n        setNotification({ type: 'danger', message: `City '${trimmedName}' does not exist in the world!` });\n      });\n  };\n\n  return (\n    <div>\n      {notification && (\n        <Notification type={notification.type} message={notification.message} onClose={() => setNotification(null)} />\n      )}\n      <form id=\"addCityForm\" onSubmit={handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <input\n              className=\"input\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"City Name\"\n              required\n              value={cityName}\n              onChange={e => setCityName(e.target.value)}\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info\" type=\"submit\">Add City</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddCityForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}