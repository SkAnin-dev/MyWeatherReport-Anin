{"ast":null,"code":"var _jsxFileName = \"/user/HS400/sa03742/MyWeatherReport/react-app/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport Layout from \"./components/Layout\";\nimport HomePage from \"./pages/Home\"; // Home page component.\nimport AlbumPage from \"./pages/Album\"; // Album details page component.\nimport WeatherPage from \"./pages/WeatherPage\"; // Weather report page component.\n\n// Create a QueryClient instance for React Query.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // Provide React Query context to the app.\n    _jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/weather/:city\",\n              element: /*#__PURE__*/_jsxDEV(WeatherPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","QueryClient","QueryClientProvider","Layout","HomePage","AlbumPage","WeatherPage","jsxDEV","_jsxDEV","queryClient","App","client","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/user/HS400/sa03742/MyWeatherReport/react-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport Layout from \"./components/Layout\";\nimport HomePage from \"./pages/Home\"; // Home page component.\nimport AlbumPage from \"./pages/Album\"; // Album details page component.\nimport WeatherPage from \"./pages/WeatherPage\"; // Weather report page component.\n\n// Create a QueryClient instance for React Query.\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    // Provide React Query context to the app.\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <Layout>\n          {/* Define routes based on the URL path. */}\n          <Routes>\n            {/* Home page route */}\n            <Route path=\"/\" element={<HomePage />} />\n            {/* Weather report page route */}\n            <Route path=\"/weather/:city\" element={<WeatherPage />} />\n          </Routes>\n        </Layout>\n      </Router>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AACxE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,cAAc,CAAC,CAAC;AACrC,OAAOC,SAAS,MAAM,eAAe,CAAC,CAAC;AACvC,OAAOC,WAAW,MAAM,qBAAqB,CAAC,CAAC;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIR,WAAW,CAAC,CAAC;AAErC,SAASS,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACAF,OAAA,CAACN,mBAAmB;MAACS,MAAM,EAAEF,WAAY;MAAAG,QAAA,eACvCJ,OAAA,CAACV,MAAM;QAAAc,QAAA,eACLJ,OAAA,CAACL,MAAM;UAAAS,QAAA,eAELJ,OAAA,CAACT,MAAM;YAAAa,QAAA,gBAELJ,OAAA,CAACR,KAAK;cAACa,IAAI,EAAC,GAAG;cAACC,OAAO,eAAEN,OAAA,CAACJ,QAAQ;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAEzCV,OAAA,CAACR,KAAK;cAACa,IAAI,EAAC,gBAAgB;cAACC,OAAO,eAAEN,OAAA,CAACF,WAAW;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;AAE1B;AAACC,EAAA,GAjBQT,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}