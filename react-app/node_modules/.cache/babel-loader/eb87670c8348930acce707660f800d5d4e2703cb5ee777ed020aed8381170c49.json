{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skahm\\\\Downloads\\\\MyWeatherReport\\\\MyWeatherReport\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Marquee from './components/Marquee';\nimport AddCityForm from './components/AddCityForm';\nimport CityList from './components/CityList';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport { API } from './constant';\n\n// The list of default cities, no longer used to auto-refresh deleted cities.\n//const DEFAULT_CITIES = ['Tokyo', 'New York', 'London'];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialise cities from localStorage as a fallback.\n  const [cities, setCities] = useState(() => {\n    const stored = localStorage.getItem('cities');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [notification, setNotification] = useState(null);\n  const formRef = useRef(null);\n\n  // Update localStorage when cities change.\n  const updateLocalStorage = newCities => {\n    localStorage.setItem('cities', JSON.stringify(newCities));\n  };\n\n  // syncCities fetches the current list from the backend.\n  const syncCities = useCallback(() => {\n    fetch(API + 'cities/', {\n      credentials: 'include'\n    }).then(response => response.json()).then(data => {\n      setCities(data);\n      updateLocalStorage(data);\n      // (Default cities are no longer re-added here.)\n    }).catch(err => console.error(\"Error syncing cities:\", err));\n  }, []);\n\n  // Initial sync on mount.\n  useEffect(() => {\n    syncCities();\n  }, [syncCities]);\n  const showNotification = notif => {\n    setNotification(notif);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // For both add and delete actions, we simply sync the list.\n  const addCity = () => {\n    syncCities();\n  };\n  const removeCity = () => {\n    syncCities();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marquee, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      style: {\n        background: \"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-offset-4 is-4\",\n            ref: formRef,\n            children: [/*#__PURE__*/_jsxDEV(AddCityForm, {\n              cities: cities,\n              onCityAdded: addCity,\n              showNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n              type: notification.type,\n              message: notification.message,\n              onClose: () => setNotification(null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: /*#__PURE__*/_jsxDEV(CityList, {\n            cities: cities,\n            onCityDeleted: removeCity,\n            showNotification: showNotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        borderTop: \"2px solid #000\",\n        marginBottom: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g9w4qATW6jv1UcDIHTqvwS/xrKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Header","Hero","Marquee","AddCityForm","CityList","Footer","Notification","API","jsxDEV","_jsxDEV","App","_s","cities","setCities","stored","localStorage","getItem","JSON","parse","notification","setNotification","formRef","updateLocalStorage","newCities","setItem","stringify","syncCities","fetch","credentials","then","response","json","data","catch","err","console","error","showNotification","notif","window","scrollTo","top","behavior","addCity","removeCity","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","background","backgroundSize","ref","onCityAdded","type","message","onClose","onCityDeleted","borderTop","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/skahm/Downloads/MyWeatherReport/MyWeatherReport/react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Marquee from './components/Marquee';\nimport AddCityForm from './components/AddCityForm';\nimport CityList from './components/CityList';\nimport Footer from './components/Footer';\nimport Notification from './components/Notification';\nimport { API } from './constant';\n\n// The list of default cities, no longer used to auto-refresh deleted cities.\n//const DEFAULT_CITIES = ['Tokyo', 'New York', 'London'];\n\nfunction App() {\n  // Initialise cities from localStorage as a fallback.\n  const [cities, setCities] = useState(() => {\n    const stored = localStorage.getItem('cities');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [notification, setNotification] = useState(null);\n  const formRef = useRef(null);\n\n  // Update localStorage when cities change.\n  const updateLocalStorage = (newCities) => {\n    localStorage.setItem('cities', JSON.stringify(newCities));\n  };\n\n  // syncCities fetches the current list from the backend.\n  const syncCities = useCallback(() => {\n    fetch(API + 'cities/', { credentials: 'include' })\n      .then(response => response.json())\n      .then(data => {\n        setCities(data);\n        updateLocalStorage(data);\n        // (Default cities are no longer re-added here.)\n      })\n      .catch(err => console.error(\"Error syncing cities:\", err));\n  }, []);\n\n  // Initial sync on mount.\n  useEffect(() => {\n    syncCities();\n  }, [syncCities]);\n\n  const showNotification = (notif) => {\n    setNotification(notif);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // For both add and delete actions, we simply sync the list.\n  const addCity = () => {\n    syncCities();\n  };\n\n  const removeCity = () => {\n    syncCities();\n  };\n\n  return (\n    <div>\n      <Header />\n      <Hero />\n      <Marquee />\n      <section\n        className=\"section\"\n        style={{\n          background: \"url('/media/metofficegovuk_heroXLarge.jpeg') no-repeat center center\",\n          backgroundSize: 'cover'\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-offset-4 is-4\" ref={formRef}>\n              <AddCityForm\n                cities={cities}\n                onCityAdded={addCity}\n                showNotification={showNotification}\n              />\n              {notification && (\n                <Notification\n                  type={notification.type}\n                  message={notification.message}\n                  onClose={() => setNotification(null)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <CityList\n              cities={cities}\n              onCityDeleted={removeCity}\n              showNotification={showNotification}\n            />\n          </div>\n        </div>\n      </section>\n      <hr style={{ borderTop: \"2px solid #000\", marginBottom: 0 }} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}